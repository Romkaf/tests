{"version":3,"sources":["components/Modal/Modal.module.scss","components/TestManagement/Dropdown/Dropdown.module.scss","components/TestManagement/FormQuestion/FormQuestion.module.scss","components/Login/InputField/InputField.module.scss","components/Login/Login.module.scss","components/InputGroup/InputGroup.module.scss","components/TestManagement/FormQuestion/FormAnswer/FormAnswer.module.scss","constants/index.js","components/Login/InputField/InputField.jsx","components/Login/Button/Button.jsx","components/Login/validate.js","components/Login/Login.jsx","models/actions/actionTypes.js","models/actions/user.js","models/actions/modal.js","models/actions/registration.js","models/actions/error.js","models/actions/tests.js","models/actions/questionsAnswers.js","components/Login/LoginContainer.jsx","components/pages/LoginPage/LoginPage.jsx","components/pages/NotFoundPage/NotFoundPage.jsx","components/TestTable/Row/Row.jsx","components/TestTable/TestTable.jsx","components/TestTable/TestTableContainer.jsx","components/InputGroup/InputGroup.jsx","components/InputGroup/InputGroupContainer.jsx","models/actions/filter.js","components/pages/HomePage/HomePage.jsx","components/pages/HomePage/HomePageContainer.jsx","components/Modal/Modal.jsx","components/Modal/ModalContainer.jsx","components/TestManagement/QuestionList/QuestionItem/QuestionItem.jsx","components/TestManagement/QuestionList/QuestionList.jsx","components/TestManagement/QuestionList/QuestionListContainer.jsx","components/TestManagement/Dropdown/Dropdown.jsx","components/TestManagement/FormQuestion/FormAnswer/FormAnswer.jsx","components/TestManagement/FormQuestion/validate.js","components/TestManagement/FormQuestion/FormQuestion.jsx","utils/customHooks.js","components/TestManagement/FormQuestion/FormQuestionContainer.jsx","components/TestManagement/TestManagement.jsx","components/TestManagement/TestManagementContainer.jsx","components/pages/ManagementPage/ManagementPage.jsx","components/ErrorIndicator/ErrorIndicator.jsx","components/App/App.jsx","components/App/AppContainer.jsx","models/reducers/index.js","models/reducers/modal.js","models/reducers/user.js","models/reducers/registration.js","models/reducers/error.js","models/reducers/tests.js","models/reducers/filter.js","api/axios.js","api/request.js","api/index.js","sagas/error.js","sagas/users.js","sagas/tests.js","sagas/questionsAnswers.js","sagas/index.js","store/index.js","index.js"],"names":["module","exports","LOGIN_FORM","locStorKey","QUESTION_FORM","INPUTS_ID","ERROR_TEXTS","InputField","type","id","label","error","className","htmlFor","required","styles","Button","func","color","onClick","REQUIRED","MIN_NAME_LENGTH","MIN_PASSWORD_LENGTH","NOT_MATCH","validator","value","min","String","length","Login","onFetchRegistration","onFetchSignin","onToggleRegistration","isRegistrated","useState","errors","setErrors","userName","password","passwordConfirmation","admin","handleBtnClick","evt","target","blur","getDataForm","form","document","forms","username","password_confirmation","is_admin","checked","validateData","data","formErrors","fields","undefined","validate","Object","keys","root","name","SHOW_MODAL","HIDE_MODAL","FETCH_REGISTRATION","FETCH_SIGNIN","FETCH_SIGNIN_SUCCESS","SIGNOUT","TOGGLE_REGISTRATION","SHOW_ERROR","HIDE_ERROR","FETCH_TESTS","FETCH_TESTS_SUCCESS","REQUEST_ADD_TEST","ADD_TEST","CHANGE_FILTER","SORT_TESTS","ADD_SORT_TESTS","REQUEST_DELETE_TEST","DELETE_TEST","REQUEST_EDIT_TEST","REQUEST_CREATE_QUESTION","ADD_QUESTION","UPDATE_QUESTION","REQUEST_UPDATE_QUESTION","REQUEST_DELETE_QUESTION","DELETE_QUESTION","REQUEST_MOVE_ANSWER","fetchSigninSuccess","payload","showModal","text","toggleRegistration","showError","fetchTestsSuccess","tests","addTest","addSortTests","deleteTest","editTest","addQuestion","updateQuestion","deleteQuestion","testId","questionId","actions","fetchRegistration","fetchSignin","connect","registration","LoginPage","NotFoundPage","Row","item","onModalShow","isAdmin","title","created_at","date","Date","toLocaleDateString","history","useHistory","handleTestStart","push","tabIndex","tagName","TestTable","map","fetchTests","user","filter","useEffect","visibleTests","it","toUpperCase","includes","InputGroup","btnTitle1","btnTitle2","funcBtn1","funcBtn2","onChangeFilter","setValue","setError","classInput","classnames","onChange","handleFilterChange","changeFilter","props","HomePage","onSignOut","onRequestAddTest","onTestsSort","isNewTest","setIsNewTest","handleTestsSort","isSort","wrapperTestsSort","to","signOut","requestAddTest","sortTests","str","Modale","onModalConfirm","onModalHide","modal","current","focus","body","classList","add","lock","remove","useRef","handleModalCansel","ref","contains","onKeyDown","keyCode","aria-label","aria-hidden","hideModal","Modal","QuestionItem","onSetTypeQuestion","typeQuestion","onSetQuestion","onRequestDeleteQuestion","QuestionList","questions","question_type","question","propTypes","PropTypes","array","requestDeleteQuestion","useLocation","pathname","replace","Dropdown","dropBtn","disabled","dropdown","show","dropElem","handleTypeBtnClick","textContent","handleDropBtnClick","toggle","FormAnswer","answer","onAnswerDelete","keyId","find","is_right","isRight","setIsRight","wrapperAnswerDelete","data-id","hidden","state","btn","INDICATE_ANSWER","TWO_ANSWER","ONE_RIGHT_ANSWER","FormQuestion","onRequestCreateQuestion","onRequestUpdateQuestion","onRequestMoveAnswer","shouldUpdate","answers","newAnswers","setNewAnswers","prevQuestion","usePrevious","answerList","selected","checkAnswers","currentAnswers","oldAnswers","patchAnswers","some","el","postAnswers","deleteAnswers","every","answersGeneral","forEach","answersInputs","handleAnswerDelete","autoFocus","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","draggableId","droppableId","provided","droppableProps","innerRef","idx","snapshot","isDragging","draggableProps","dragHandleProps","placeholder","inputsValues","dataset","checkboxValues","getFormData","checkedAnswers","updatingQuestion","quetionId","requestCreateQuestion","requestUpdateQuestion","requestMoveAnswer","position","TestManagement","test","onRequestDeleteTest","onRequestEditTest","setQuestion","setTypeQuestion","handleTestDelete","handleTestSave","requestDeleteTest","requestEditTest","ManagementPage","ErrorIndicator","App","exact","path","render","component","match","params","AppContainer","this","PureComponent","combineReducers","action","axios","create","withCredentials","baseURL","headers","responseType","requestFn","method","url","getRequest","postRequest","deleteRequest","patchRequest","fetchSigninUser","fetchSignoutUser","fetchCreateTest","fetchGetTests","param","fetchDeleteTest","fetchEditTest","fetchCreateQuestion","fetchCreateAnswer","fetchUpdateAnswer","fetchMoveAnswer","fetchDeleteAnswer","showAndHideError","put","delay","workerFetchRegistration","workerFetchSignin","workerFetchSignout","rootSaga","call","console","log","all","takeEvery","workerFetchGetTests","workerFetchPostTest","workerFetchGetSortTest","workerFetchDeleteTest","workerFetchEditTest","getCreatedQuestion","getFetchedAnswers","workerFetchPostQuestionAndAnswers","workerFetchPatchQuestionAndAnswers","workerFetchDeleteQuestion","workerFetchMoveAnswer","postedQuestion","a","receivedQuestion","receivedAnswers","updatedAnswers","createdAnswers","concat","users","questionsAnswers","initialState","JSON","parse","localStorage","getItem","sagaMiddleware","createSagaMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","run","subscribe","setItem","stringify","getState","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.358b1e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Modal_root__3Mk4M\",\"lock\":\"Modal_lock__2eL6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__FADwO\",\"show\":\"Dropdown_show__2xDEa\",\"disabled\":\"Dropdown_disabled__KzqoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerList\":\"FormQuestion_answerList__DDAdZ\",\"selected\":\"FormQuestion_selected__1GAq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"InputField_error__3BKdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__1q63o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"InputGroup_error__1ruXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FormAnswer_btn__2dQVj\"};","export const MODAL_QUEST_RUN_TEST = 'Do you want to start the test?';\nexport const keyCodeEsc = 27;\nexport const baseURL = 'https://snp-tests.herokuapp.com/api/v1/';\nexport const mockURL = 'http://localhost:3200/users';\nexport const scopeKey = '?J_8TB]Eej:GVqR';\nexport const LOGIN_FORM = 'LOGIN_FORM';\nexport const locStorKey = 'testsLocStore';\nexport const QUESTION_FORM = 'QUESTION_FORM';\n\nexport const INPUTS_ID = {\n\tuserName: 'username',\n\tpassword: 'password',\n\tpasswordConfirmation: 'passwordConfirmation',\n\tadmin: 'admin',\n};\nexport const ERROR_TEXTS = {\n\tMIN_NAME_LENGTH: 'Requires at least two characters',\n\tMIN_PASSWORD_LENGTH: 'Requires at least six characters',\n\tNOT_MATCH: 'Password does not match',\n\tREQUIRED: 'Required to fill',\n\tINDICATE_ANSWER: 'Indicate the correct answer',\n\tONE_RIGHT_ANSWER: 'Requires only one right answer',\n\tONE_ANSWER: 'Requires at least one answer',\n\tTWO_ANSWER: 'Requires at least two answers',\n};\n","import React from 'react';\nimport styles from './InputField.module.scss';\n\nconst InputField = ({ type, id, label, error }) => {\n\treturn (\n\t\t<div className=\"form-group position-relative\">\n\t\t\t<label htmlFor={id}>{label}</label>\n\t\t\t<input type={type} className=\"form-control\" id={id} required />\n\t\t\t{error && <span className={styles.error}>{error}</span>}\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import React from 'react';\n\nconst Button = ({ label, func, color }) => {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={`btn btn-block btn-${color} mt-4`}\n\t\t\tonClick={func}\n\t\t>\n\t\t\t{label}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import { ERROR_TEXTS } from '@constants';\n\nconst {\n\tREQUIRED,\n\tMIN_NAME_LENGTH,\n\tMIN_PASSWORD_LENGTH,\n\tNOT_MATCH,\n} = ERROR_TEXTS;\n\nconst validator = {\n\tisMinLength: (value, min) => String(value).length > min,\n};\n\nexport const validate = (fields) => {\n\tconst errors = {};\n\tif (!validator.isMinLength(fields.username, 1)) {\n\t\terrors.username = MIN_NAME_LENGTH;\n\t}\n\n\tif (!fields.username) {\n\t\terrors.username = REQUIRED;\n\t}\n\n\tif (!validator.isMinLength(fields.password, 5)) {\n\t\terrors.password = MIN_PASSWORD_LENGTH;\n\t}\n\n\tif (!fields.password) {\n\t\terrors.password = REQUIRED;\n\t}\n\n\tif (fields.password_confirmation !== undefined) {\n\t\tif (fields.password_confirmation !== fields.password) {\n\t\t\terrors.password_confirmation = NOT_MATCH;\n\t\t}\n\n\t\tif (!fields.password_confirmation) {\n\t\t\terrors.password_confirmation = REQUIRED;\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import React, { useState } from 'react';\nimport { LOGIN_FORM, INPUTS_ID } from '@constants';\nimport InputField from './InputField';\nimport styles from './Login.module.scss';\nimport Button from './Button/Button';\nimport { validate } from './validate';\n\nconst Login = ({\n\tonFetchRegistration,\n\tonFetchSignin,\n\tonToggleRegistration,\n\tisRegistrated,\n}) => {\n\tconst [errors, setErrors] = useState({});\n\tconst { userName, password, passwordConfirmation, admin } = INPUTS_ID;\n\n\tconst handleBtnClick = (evt) => {\n\t\tonToggleRegistration();\n\t\tsetErrors({});\n\t\tevt.target.blur();\n\t};\n\n\tconst getDataForm = () => {\n\t\tconst form = document.forms[LOGIN_FORM];\n\n\t\tconst newData = {\n\t\t\tusername: form[userName].value,\n\t\t\tpassword: form[password].value,\n\t\t\tpassword_confirmation: form[passwordConfirmation]?.value,\n\t\t\tis_admin: form[admin]?.checked,\n\t\t};\n\n\t\treturn newData;\n\t};\n\n\tconst validateData = (data, func) => {\n\t\tconst formErrors = validate(data);\n\t\tsetErrors(formErrors);\n\t\tif (Object.keys(formErrors).length === 0) {\n\t\t\tfunc(data);\n\t\t}\n\t};\n\n\tconst handleLoginClick = () => {\n\t\tconst data = getDataForm();\n\t\tvalidateData(data, onFetchSignin);\n\t};\n\n\tconst handleRegistrationClick = (evt) => {\n\t\tconst data = getDataForm();\n\t\tvalidateData(data, onFetchRegistration);\n\t};\n\n\treturn (\n\t\t<form className={styles.root} name={LOGIN_FORM}>\n\t\t\t<InputField\n\t\t\t\ttype=\"text\"\n\t\t\t\tid={userName}\n\t\t\t\tlabel=\"Login\"\n\t\t\t\terror={errors?.username}\n\t\t\t/>\n\n\t\t\t<InputField\n\t\t\t\ttype=\"password\"\n\t\t\t\tid={password}\n\t\t\t\tlabel=\"Password\"\n\t\t\t\terror={errors?.password}\n\t\t\t/>\n\n\t\t\t{!isRegistrated && (\n\t\t\t\t<InputField\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid={passwordConfirmation}\n\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\terror={errors?.password_confirmation}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isRegistrated ? (\n\t\t\t\t<>\n\t\t\t\t\t<Button label=\"Log In\" func={handleLoginClick} color=\"primary\" />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"I don't have an account\"\n\t\t\t\t\t\tfunc={handleBtnClick}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"mb-3 form-check\">\n\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id={admin} />\n\t\t\t\t\t\t<label htmlFor={admin} className=\"form-check-label\">\n\t\t\t\t\t\t\tAre you an admin?\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"Registration\"\n\t\t\t\t\t\tfunc={handleRegistrationClick}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"I have an account\"\n\t\t\t\t\t\tfunc={handleBtnClick}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nexport default Login;\n","export const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const FETCH_REGISTRATION = 'FETCH_REGISTRATION';\nexport const FETCH_SIGNIN = 'FETCH_SIGNIN';\nexport const FETCH_SIGNIN_SUCCESS = 'FETCH_SIGNIN_SUCCESS';\nexport const SIGNOUT = 'SIGNOUT';\nexport const TOGGLE_REGISTRATION = 'TOGGLE_REGISTRATION';\nexport const SHOW_ERROR = 'SHOW_ERROR';\nexport const HIDE_ERROR = 'HIDE_ERROR';\nexport const FETCH_TESTS = 'FETCH_TESTS';\nexport const FETCH_TESTS_SUCCESS = 'FETCH_TESTS_SUCCESS';\nexport const REQUEST_ADD_TEST = 'REQUEST_ADD_TEST';\nexport const ADD_TEST = 'ADD_TEST';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const SORT_TESTS = 'SORT_TESTS';\nexport const ADD_SORT_TESTS = 'ADD_SORT_TESTS';\nexport const REQUEST_DELETE_TEST = 'REQUEST_DELETE_TEST';\nexport const DELETE_TEST = 'DELETE_TEST';\nexport const REQUEST_EDIT_TEST = 'REQUEST_EDIT_TEST';\nexport const EDIT_TEST = 'EDIT_TEST';\nexport const REQUEST_CREATE_QUESTION = 'REQUEST_CREATE_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\nexport const REQUEST_UPDATE_QUESTION = 'REQUEST_UPDATE_QUESTION';\nexport const REQUEST_DELETE_QUESTION = 'REQUEST_DELETE_QUESTION';\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\nexport const REQUEST_MOVE_ANSWER = 'REQUEST_MOVE_ANSWER';\n","import {\n\tFETCH_REGISTRATION,\n\tFETCH_SIGNIN,\n\tFETCH_SIGNIN_SUCCESS,\n\tSIGNOUT,\n} from './actionTypes';\n\nexport const fetchRegistration = (data) => {\n\treturn {\n\t\ttype: FETCH_REGISTRATION,\n\t\tpayload: data,\n\t};\n};\n\nexport const fetchSignin = (data) => {\n\treturn {\n\t\ttype: FETCH_SIGNIN,\n\t\tpayload: data,\n\t};\n};\n\nexport const fetchSigninSuccess = (data) => {\n\treturn {\n\t\ttype: FETCH_SIGNIN_SUCCESS,\n\t\tpayload: data,\n\t};\n};\n\nexport const signOut = () => {\n\treturn {\n\t\ttype: SIGNOUT,\n\t};\n};\n","import { SHOW_MODAL, HIDE_MODAL } from './actionTypes';\n\nexport const showModal = (text, func) => {\n\treturn {\n\t\ttype: SHOW_MODAL,\n\t\tpayload: { text, func },\n\t};\n};\n\nexport const hideModal = () => {\n\treturn {\n\t\ttype: HIDE_MODAL,\n\t};\n};\n","import { TOGGLE_REGISTRATION } from './actionTypes';\n\nexport const toggleRegistration = () => {\n\treturn {\n\t\ttype: TOGGLE_REGISTRATION,\n\t};\n};\n","import { SHOW_ERROR, HIDE_ERROR } from './actionTypes';\n\nexport const hideError = () => ({\n\ttype: HIDE_ERROR,\n});\n\nexport const showError = (text) => ({ type: SHOW_ERROR, payload: text });\n","import {\n\tFETCH_TESTS,\n\tFETCH_TESTS_SUCCESS,\n\tREQUEST_ADD_TEST,\n\tADD_TEST,\n\tREQUEST_DELETE_TEST,\n\tDELETE_TEST,\n\tSORT_TESTS,\n\tADD_SORT_TESTS,\n\tREQUEST_EDIT_TEST,\n\tEDIT_TEST,\n} from './actionTypes';\n\nexport const fetchTests = () => ({ type: FETCH_TESTS });\n\nexport const fetchTestsSuccess = (tests) => ({\n\ttype: FETCH_TESTS_SUCCESS,\n\tpayload: tests,\n});\n\nexport const requestAddTest = (data) => ({\n\ttype: REQUEST_ADD_TEST,\n\tpayload: data,\n});\n\nexport const addTest = (data) => ({ type: ADD_TEST, payload: data });\n\nexport const sortTests = (str) => ({ type: SORT_TESTS, payload: str });\n\nexport const addSortTests = (tests) => ({\n\ttype: ADD_SORT_TESTS,\n\tpayload: tests,\n});\n\nexport const requestDeleteTest = (id, history) => ({\n\ttype: REQUEST_DELETE_TEST,\n\tpayload: { id, history },\n});\n\nexport const requestEditTest = (id, value, history) => ({\n\ttype: REQUEST_EDIT_TEST,\n\tpayload: { id, value, history },\n});\n\nexport const deleteTest = (id) => ({ type: DELETE_TEST, payload: id });\nexport const editTest = (id) => ({ type: EDIT_TEST, payload: id });\n","import {\n\tREQUEST_CREATE_QUESTION,\n\tADD_QUESTION,\n\tREQUEST_UPDATE_QUESTION,\n\tUPDATE_QUESTION,\n\tREQUEST_DELETE_QUESTION,\n\tDELETE_QUESTION,\n\tREQUEST_MOVE_ANSWER,\n} from './actionTypes';\n\nexport const requestCreateQuestion = (testId, data) => ({\n\ttype: REQUEST_CREATE_QUESTION,\n\tpayload: { testId, data },\n});\n\nexport const requestUpdateQuestion = (testId, data) => ({\n\ttype: REQUEST_UPDATE_QUESTION,\n\tpayload: { testId, data },\n});\n\nexport const addQuestion = (id, data) => ({\n\ttype: ADD_QUESTION,\n\tpayload: { id, data },\n});\n\nexport const updateQuestion = (id, data) => ({\n\ttype: UPDATE_QUESTION,\n\tpayload: { id, data },\n});\n\nexport const requestDeleteQuestion = (testId, questionId) => ({\n\ttype: REQUEST_DELETE_QUESTION,\n\tpayload: { testId, questionId },\n});\n\nexport const deleteQuestion = (testId, questionId) => ({\n\ttype: DELETE_QUESTION,\n\tpayload: { testId, questionId },\n});\n\nexport const requestMoveAnswer = (id, position) => ({\n\ttype: REQUEST_MOVE_ANSWER,\n\tpayload: { id, position },\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport {\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n} from '@models/actions';\n\nconst LoginContainer = ({\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n\tisRegistrated,\n}) => {\n\treturn (\n\t\t<Login\n\t\t\tonFetchRegistration={fetchRegistration}\n\t\t\tonFetchSignin={fetchSignin}\n\t\t\tonToggleRegistration={toggleRegistration}\n\t\t\tisRegistrated={isRegistrated}\n\t\t/>\n\t);\n};\n\nconst actions = {\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n};\n\nconst mapStateToProps = ({ registration }) => ({ isRegistrated: registration });\n\nexport default connect(mapStateToProps, actions)(LoginContainer);\n","import React from 'react';\nimport LoginContainer from '@components/Login';\n\nconst LoginPage = () => <LoginContainer />;\n\nexport default LoginPage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n\t<div className=\"alert alert-primary mt-3\">\n\t\t<h3>Page not found</h3>\n\t\t<p>We are sorry but the page you are looking for does not exist.</p>\n\t</div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MODAL_QUEST_RUN_TEST } from '@constants';\n\nconst Row = ({ item, onModalShow, isAdmin }) => {\n\tconst { title, created_at, id } = item;\n\tconst date = new Date(created_at).toLocaleDateString();\n\tconst history = useHistory();\n\n\tconst handleRowClick = (evt) => {\n\t\tevt.target.tagName !== 'BUTTON' &&\n\t\t\tevt.target.tagName !== 'I' &&\n\t\t\tonModalShow(MODAL_QUEST_RUN_TEST, handleTestStart);\n\t};\n\n\tconst handleBtnEditClick = () => history.push(`/management/${id}`);\n\n\tconst handleTestStart = () => history.push(`/tests/${id}`);\n\n\treturn (\n\t\t<tr className=\"btn-light\" tabIndex=\"0\" onClick={handleRowClick}>\n\t\t\t<td>{title}</td>\n\t\t\t<td>{date}</td>\n\t\t\t<td>\n\t\t\t\t{isAdmin && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\t\t\ttitle=\"Edit\"\n\t\t\t\t\t\tonClick={handleBtnEditClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"bi bi-pencil-square\" />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nRow.propTypes = {\n\titem: PropTypes.object,\n\tonModalShow: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n};\n\nexport default Row;\n","import React from 'react';\nimport Row from './Row';\nimport PropTypes from 'prop-types';\n\nconst TestTable = ({ onModalShow, tests, isAdmin }) => {\n\treturn (\n\t\t<div>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Test</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\n\t\t\t\t<tbody>\n\t\t\t\t\t{tests.map((item) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nTestTable.propTypes = {\n\ttests: PropTypes.array,\n\tonModalShow: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n};\n\nexport default TestTable;\n","import React, { useEffect } from 'react';\nimport TestTable from './TestTable';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showModal, fetchTests } from '@models/actions';\n\nconst TestTableContainer = ({\n\tshowModal,\n\ttests,\n\tisAdmin,\n\tfilter,\n\tfetchTests,\n}) => {\n\tuseEffect(() => fetchTests(), []);\n\n\tconst isInclude = (str) => str.toUpperCase().includes(filter.toUpperCase());\n\tconst visibleTests = filter\n\t\t? tests.filter((it) => isInclude(it.title))\n\t\t: tests;\n\n\treturn (\n\t\t<TestTable onModalShow={showModal} tests={visibleTests} isAdmin={isAdmin} />\n\t);\n};\n\nTestTableContainer.propTypes = {\n\ttests: PropTypes.array,\n\tfetchTests: PropTypes.func,\n\tshowModal: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tfilter: PropTypes.string,\n};\n\nconst actions = {\n\tshowModal,\n\tfetchTests,\n};\n\nconst mapStateToProps = ({ tests, user, filter }) => ({\n\ttests,\n\tisAdmin: user.is_admin,\n\tfilter,\n});\n\nexport default connect(mapStateToProps, actions)(TestTableContainer);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './InputGroup.module.scss';\nimport classnames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nconst InputGroup = ({\n\ttitle,\n\tbtnTitle1,\n\tbtnTitle2,\n\tfuncBtn1,\n\tfuncBtn2,\n\tisAdmin = true,\n\tonChangeFilter,\n}) => {\n\tconst [value, setValue] = useState('');\n\tconst [error, setError] = useState(false);\n\tconst history = useHistory();\n\tconst classInput = classnames('form-control', 'mr-2', 'shadow-sm', {\n\t\t'is-invalid': error,\n\t});\n\n\tconst handleFilterChange = (value) => {\n\t\tonChangeFilter(value);\n\t\thistory.push(`/tests?search=${value}`);\n\t};\n\n\tconst handleInputChange = (evt) => {\n\t\tsetValue(evt.target.value);\n\t\ttitle === 'Filter' && handleFilterChange(evt.target.value);\n\t};\n\n\tconst handleBtnCreateClick = () => {\n\t\tif (!value) {\n\t\t\tsetError(true);\n\t\t} else {\n\t\t\tsetError(false);\n\t\t\tfuncBtn2({ title: value });\n\t\t}\n\t};\n\n\tconst handleBtn2Click = () => {\n\t\tif (title === 'Filter') {\n\t\t\tfuncBtn2();\n\t\t} else {\n\t\t\thandleBtnCreateClick();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"mb-2\">\n\t\t\t<div className=\"input-group input-group mb-1\">\n\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t<label htmlFor={title} className=\"btn font-weight-bold\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tid={title}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t\t{error && <div className={styles.error}>Required to fill</div>}\n\t\t\t</div>\n\t\t\t<div className=\"btn-group p-2\">\n\t\t\t\t<button className=\"btn btn-secondary\" onClick={funcBtn1}>\n\t\t\t\t\t{btnTitle1}\n\t\t\t\t</button>\n\t\t\t\t{isAdmin && (\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleBtn2Click}>\n\t\t\t\t\t\t{btnTitle2}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nInputGroup.propTypes = {\n\ttitle: PropTypes.string,\n\tbtnTitle1: PropTypes.string,\n\tbtnTitle2: PropTypes.string,\n\tfuncBtn1: PropTypes.func,\n\tfuncBtn2: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tonChangeFilter: PropTypes.func,\n};\n\nexport default InputGroup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport InputGroup from './InputGroup';\nimport { changeFilter } from '@models/actions';\n\nconst InputGroupContainer = (props) => (\n\t<InputGroup\n\t\ttitle={props.title}\n\t\tbtnTitle1={props.btnTitle1}\n\t\tbtnTitle2={props.btnTitle2}\n\t\tfuncBtn1={props.funcBtn1}\n\t\tfuncBtn2={props.funcBtn2}\n\t\tisAdmin={props.isAdmin}\n\t\tonChangeFilter={props.changeFilter}\n\t/>\n);\n\nexport default connect(null, { changeFilter })(InputGroupContainer);\n","import { CHANGE_FILTER } from './actionTypes';\n\nexport const changeFilter = (value) => ({\n\ttype: CHANGE_FILTER,\n\tpayload: value,\n});\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TestTableContainer from '@components/TestTable';\nimport InputGroup from '@components/InputGroup';\nimport PropTypes from 'prop-types';\n\nconst HomePage = ({ onSignOut, onRequestAddTest, isAdmin, onTestsSort }) => {\n\tconst [isNewTest, setIsNewTest] = useState(false);\n\n\tconst handleNewTestShow = () => {\n\t\tsetIsNewTest(true);\n\t};\n\n\tconst handleNewTestHide = () => {\n\t\tsetIsNewTest(false);\n\t};\n\n\tconst handleNewTestCreate = (data) => {\n\t\tonRequestAddTest(data);\n\t};\n\n\tconst wrapperTestsSort = () => {\n\t\tlet isSort;\n\t\treturn function () {\n\t\t\tif (isSort) {\n\t\t\t\tonTestsSort('created_at_desc');\n\t\t\t\tisSort = false;\n\t\t\t} else {\n\t\t\t\tonTestsSort('created_at_asc');\n\t\t\t\tisSort = true;\n\t\t\t}\n\t\t};\n\t};\n\n\tconst handleTestsSort = wrapperTestsSort();\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tclassName=\"d-flex  flex-md-row  p-3 px-md-4 mb-3\n     border-bottom\"\n\t\t\t>\n\t\t\t\t<h2 className=\"my-0 mr-md-auto font-weight-normal\">Tests</h2>\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"btn btn-primary ml-auto\"\n\t\t\t\t\tto=\"/login\"\n\t\t\t\t\tonClick={onSignOut}\n\t\t\t\t>\n\t\t\t\t\tLog Out\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<InputGroup\n\t\t\t\ttitle=\"Filter\"\n\t\t\t\tbtnTitle1=\"Sort by date\"\n\t\t\t\tbtnTitle2=\"New Test\"\n\t\t\t\tfuncBtn1={handleTestsSort}\n\t\t\t\tfuncBtn2={handleNewTestShow}\n\t\t\t/>\n\t\t\t{isNewTest && (\n\t\t\t\t<InputGroup\n\t\t\t\t\ttitle=\"Test title\"\n\t\t\t\t\tbtnTitle1=\"Cansel\"\n\t\t\t\t\tbtnTitle2=\"Create\"\n\t\t\t\t\tfuncBtn1={handleNewTestHide}\n\t\t\t\t\tfuncBtn2={handleNewTestCreate}\n\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<TestTableContainer />\n\t\t</div>\n\t);\n};\n\nHomePage.propTypes = {\n\tonSignOut: PropTypes.func,\n\tonRequestAddTest: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tonTestsSort: PropTypes.func,\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signOut, requestAddTest, sortTests } from '@models/actions';\nimport HomePage from './HomePage';\nimport PropTypes from 'prop-types';\n\nconst HomePageContainer = ({ signOut, requestAddTest, isAdmin, sortTests }) => (\n\t<HomePage\n\t\tonSignOut={signOut}\n\t\tonRequestAddTest={requestAddTest}\n\t\tisAdmin={isAdmin}\n\t\tonTestsSort={sortTests}\n\t/>\n);\n\nHomePageContainer.propTypes = {\n\tsignOut: PropTypes.func,\n\trequestAddTest: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tsortTests: PropTypes.func,\n};\n\nconst mapStateToProps = ({ user }) => ({\n\tisAdmin: user?.is_admin,\n});\n\nconst actions = { signOut, requestAddTest, sortTests };\n\nexport default connect(mapStateToProps, actions)(HomePageContainer);\n","import React, { useEffect, useRef } from 'react';\nimport { keyCodeEsc } from '@constants';\nimport styles from './Modal.module.scss';\n\nconst Modale = ({ text, onModalConfirm, onModalHide }) => {\n\tuseEffect(() => {\n\t\tmodal.current.focus();\n\t\tdocument.body.classList.add(styles.lock);\n\t\treturn () => document.body.classList.remove(styles.lock);\n\t});\n\n\tconst modal = useRef();\n\n\tconst handleModalConfirm = () => {\n\t\tonModalConfirm();\n\t\tonModalHide();\n\t};\n\n\tconst handleModalCansel = () => {\n\t\tonModalHide();\n\t};\n\n\tconst handleModalClick = (evt) => {\n\t\tevt.target.classList.contains('modal') && onModalHide();\n\t};\n\n\tconst handleModalKeyDown = (evt) => {\n\t\tevt.keyCode === keyCodeEsc && onModalHide();\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`modal ${styles.root}`}\n\t\t\ttabIndex=\"-1\"\n\t\t\tref={modal}\n\t\t\tonClick={handleModalClick}\n\t\t\tonKeyDown={handleModalKeyDown}\n\t\t>\n\t\t\t<div className=\"modal-dialog\">\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"close mt-2\"\n\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\tonClick={handleModalCansel}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t<p>{text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\t\tonClick={handleModalCansel}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCansel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={handleModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tConfirm\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Modale;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { hideModal } from '@models/actions';\nimport Modal from './Modal';\n\nconst ModalContainer = ({ modal, hideModal }) => {\n\tif (!modal) {\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\ttext={modal.text}\n\t\t\tonModalConfirm={modal.func}\n\t\t\tonModalHide={hideModal}\n\t\t/>\n\t);\n};\n\nconst mapStateToProps = ({ modal }) => ({ modal });\n\nexport default connect(mapStateToProps, { hideModal })(ModalContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst QuestionItem = ({\n\ttitle,\n\tonSetTypeQuestion,\n\ttypeQuestion,\n\tonSetQuestion,\n\tonRequestDeleteQuestion,\n\tonModalShow,\n}) => {\n\tconst handleBtnEditClick = () => {\n\t\tonSetTypeQuestion(typeQuestion);\n\t\tonSetQuestion();\n\t};\n\n\tconst handleBtnDeleteClick = () =>\n\t\tonModalShow(\n\t\t\t'Вы действительно хотите удалить вопрос?',\n\t\t\tonRequestDeleteQuestion,\n\t\t);\n\n\treturn (\n\t\t<div className=\"d-flex align-items-center\">\n\t\t\t<span className=\"flex-fill pr-1\">{title}</span>\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right mr-3\"\n\t\t\t\tonClick={handleBtnEditClick}\n\t\t\t>\n\t\t\t\t<i className=\"bi bi-pencil-square\" />\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\tonClick={handleBtnDeleteClick}\n\t\t\t>\n\t\t\t\t<i className=\"bi bi-x-square\"></i>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nQuestionItem.propTypes = {\n\ttitle: PropTypes.string,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\tonRequestDeleteQuestion: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default QuestionItem;\n","import React from 'react';\nimport QuestionItem from './QuestionItem/QuestionItem';\nimport PropTypes from 'prop-types';\n\nconst QuestionList = ({\n\tquestions,\n\tonSetTypeQuestion,\n\tonSetQuestion,\n\tonRequestDeleteQuestion,\n\tonModalShow,\n}) => {\n\tconst wrapperSetQuestion = (question) => () => onSetQuestion(question);\n\tconst wrappeRequestDeleteQuestion = (id) => () => onRequestDeleteQuestion(id);\n\n\treturn (\n\t\t<>\n\t\t\t<h5>Questions:</h5>\n\t\t\t<ol className=\"container pr-0\">\n\t\t\t\t{questions.map((it) => (\n\t\t\t\t\t<li className=\"alert alert-light\" key={it.id}>\n\t\t\t\t\t\t<QuestionItem\n\t\t\t\t\t\t\ttitle={it.title}\n\t\t\t\t\t\t\ttypeQuestion={it.question_type}\n\t\t\t\t\t\t\tonSetTypeQuestion={onSetTypeQuestion}\n\t\t\t\t\t\t\tonSetQuestion={wrapperSetQuestion(it)}\n\t\t\t\t\t\t\tonRequestDeleteQuestion={wrappeRequestDeleteQuestion(it.id)}\n\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nQuestionList.propTypes = {\n\tquestions: PropTypes.array,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\tonRequestDeleteQuestion: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default QuestionList;\n","import React from 'react';\nimport QuestionList from './QuestionList';\nimport { connect } from 'react-redux';\nimport { requestDeleteQuestion, showModal } from '@models/actions';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst QuestionListContainer = (props) => {\n\tconst location = useLocation();\n\tconst testId = location.pathname.replace(/\\/management\\//, '');\n\n\tconst onRequestDeleteQuestion = (questionId) => {\n\t\tprops.requestDeleteQuestion(testId, questionId);\n\t\tprops.onSetTypeQuestion('');\n\t};\n\n\treturn (\n\t\t<QuestionList\n\t\t\tquestions={props.questions}\n\t\t\tonSetTypeQuestion={props.onSetTypeQuestion}\n\t\t\tonSetQuestion={props.onSetQuestion}\n\t\t\tonRequestDeleteQuestion={onRequestDeleteQuestion}\n\t\t\tonModalShow={props.showModal}\n\t\t/>\n\t);\n};\n\nQuestionList.propTypes = {\n\tquestions: PropTypes.array,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\trequestDeleteQuestion: PropTypes.func,\n\tshowModal: PropTypes.func,\n};\n\nconst actions = { requestDeleteQuestion, showModal };\n\nexport default connect(null, actions)(QuestionListContainer);\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Dropdown.module.scss';\n\nconst Dropdown = ({ onSetTypeQuestion, typeQuestion }) => {\n\tuseEffect(\n\t\t() =>\n\t\t\t!typeQuestion\n\t\t\t\t? dropBtn.current.classList.remove(`${disabled}`)\n\t\t\t\t: dropBtn.current.classList.add(`${disabled}`),\n\t\t[typeQuestion],\n\t);\n\n\tconst { dropdown, show, disabled } = styles;\n\tconst dropElem = useRef();\n\tconst dropBtn = useRef();\n\n\tconst handleTypeBtnClick = (evt) => onSetTypeQuestion(evt.target.textContent);\n\n\tconst handleDropBtnClick = (evt) => {\n\t\tdropElem.current.classList.toggle(`${show}`);\n\t\tdropElem.current.focus();\n\t};\n\n\treturn (\n\t\t<div className=\"position-relative d-inline-block mb-3 mt-1\">\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\tref={dropBtn}\n\t\t\t\tonClick={handleDropBtnClick}\n\t\t\t>\n\t\t\t\tAdd question\n\t\t\t\t<i className=\"bi bi-caret-down-fill ml-3\"></i>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tid=\"myDropdown\"\n\t\t\t\tclassName={dropdown}\n\t\t\t\tref={dropElem}\n\t\t\t\ttabIndex=\"-1\"\n\t\t\t\tonClick={handleDropBtnClick}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tsingle\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light mt-0\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tmultiple\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light mt-0\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tnumber\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDropdown.propTypes = {\n\tonSetTypeQuestion: PropTypes.func,\n\ttypeQuestion: PropTypes.string,\n};\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport styles from './FormAnswer.module.scss';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst FormAnswer = ({\n\tanswer,\n\ttypeQuestion,\n\terror = null,\n\tonModalShow,\n\tonAnswerDelete,\n}) => {\n\tconst keyId =\n\t\terror && Object.keys(error).find((it) => it === String(answer.id));\n\n\tconst [value, setValue] = useState(answer?.text || '');\n\tconst [isRight, setIsRight] = useState(answer.is_right || false);\n\n\tconst classInput = classnames('form-control', {\n\t\t'is-invalid': keyId === String(answer.id),\n\t});\n\n\tconst wrapperAnswerDelete = () => onAnswerDelete(answer.id);\n\tconst handleInputChange = (evt) => setValue(evt.target.value);\n\tconst handleCheckboxChange = () => setIsRight((state) => !state);\n\tconst handleDeleteClick = () =>\n\t\tonModalShow('Вы действительно хотите удалить ответ?', wrapperAnswerDelete);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"input-group-prepend shadow-sm\">\n\t\t\t\t<input\n\t\t\t\t\ttype={typeQuestion === 'number' ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdata-id={answer.id}\n\t\t\t\t\taria-label=\"Field for an answer\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"input-group-text\"\n\t\t\t\t\thidden={typeQuestion === 'number' && true}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"checkbox\"\n\t\t\t\t\t\taria-label=\"Checkbox for right answer\"\n\t\t\t\t\t\tchecked={typeQuestion === 'number' ? true : isRight}\n\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{typeQuestion !== 'number' && (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttitle=\"Delete answer\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={styles.btn}\n\t\t\t\t\t\tonClick={handleDeleteClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t&#65794;\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{keyId === String(answer.id) && (\n\t\t\t\t<div className=\"invalid-feedback d-block\">{error[keyId]}</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nFormAnswer.propTypes = {\n\tanswer: PropTypes.object,\n\terror: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonAnswerDelete: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default FormAnswer;\n","import { ERROR_TEXTS } from '@constants';\n\nconst { REQUIRED, INDICATE_ANSWER, TWO_ANSWER, ONE_RIGHT_ANSWER } = ERROR_TEXTS;\n\nexport const validate = (fields) => {\n\tconst errors = {};\n\tif (!fields.title) {\n\t\terrors.question = REQUIRED;\n\t}\n\n\tif (fields.question_type !== 'number') {\n\t\tif (fields.answers) {\n\t\t\tif (fields.question_type === 'single') {\n\t\t\t\tif (fields.answers.filter((it) => it.is_right === true).length > 1) {\n\t\t\t\t\terrors.answersGeneral = ONE_RIGHT_ANSWER;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fields.answers.filter((it) => it.is_right === true).length) {\n\t\t\t\terrors.answersGeneral = INDICATE_ANSWER;\n\t\t\t}\n\n\t\t\tif (fields.answers.length < 2) {\n\t\t\t\terrors.answersGeneral = TWO_ANSWER;\n\t\t\t}\n\n\t\t\tfields.answers.forEach((it) => {\n\t\t\t\tif (!it.text) {\n\t\t\t\t\terrors.answersInputs = {\n\t\t\t\t\t\t...errors.answersInputs,\n\t\t\t\t\t\t[it.id]: REQUIRED,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\terrors.answersGeneral = TWO_ANSWER;\n\t\t}\n\t}\n\n\tif (fields.question_type === 'number') {\n\t\tif (fields.answers) {\n\t\t\tfields.answers.forEach((it) => {\n\t\t\t\tif (!it.text) {\n\t\t\t\t\terrors.answersInputs = {\n\t\t\t\t\t\t...errors.answersInputs,\n\t\t\t\t\t\t[it.id]: REQUIRED,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\terrors.answersGeneral = ONE_RIGHT_ANSWER;\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import React, { useState, useEffect } from 'react';\nimport FormAnswer from './FormAnswer/FormAnswer';\nimport classnames from 'classnames';\nimport { validate } from './validate';\nimport { QUESTION_FORM } from '@constants';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { usePrevious } from '@utils/customHooks';\nimport styles from './FormQuestion.module.scss';\nimport PropTypes from 'prop-types';\n\nconst FormQuestion = ({\n\tonSetTypeQuestion,\n\ttypeQuestion,\n\tquestion,\n\tonRequestCreateQuestion,\n\tonRequestUpdateQuestion,\n\tonRequestMoveAnswer,\n\tonModalShow,\n}) => {\n\tuseEffect(() => shouldUpdate());\n\n\tconst [errors, setErrors] = useState(null);\n\tconst [value, setValue] = useState(question?.title || '');\n\tconst [newAnswers, setNewAnswers] = useState(question?.answers || []);\n\tconst prevQuestion = usePrevious(question);\n\n\tconst shouldUpdate = () => {\n\t\tif (\n\t\t\tquestion !== prevQuestion &&\n\t\t\tquestion &&\n\t\t\tnewAnswers !== question?.answers\n\t\t) {\n\t\t\tsetNewAnswers(question?.answers);\n\t\t\tsetValue(question?.title);\n\t\t}\n\t};\n\n\tconst { answerList, selected } = styles;\n\n\tconst classInput = classnames('form-control', 'rounded', 'shadow-sm', {\n\t\t'is-invalid': errors?.question,\n\t});\n\n\tconst getFormData = () => {\n\t\tconst form = document.forms[QUESTION_FORM];\n\t\tif (!form['input']) {\n\t\t\treturn {\n\t\t\t\ttitle: value,\n\t\t\t\tquestion_type: typeQuestion,\n\t\t\t};\n\t\t}\n\n\t\tconst inputsValues = form['input'].length\n\t\t\t? Array.from(form['input']).map((it) => ({\n\t\t\t\t\tid: it.dataset.id,\n\t\t\t\t\ttext: it.value,\n\t\t\t  }))\n\t\t\t: [{ id: form['input'].dataset.id, text: form['input'].value }];\n\n\t\tconst checkboxValues = form['checkbox']?.length\n\t\t\t? Array.from(form['checkbox']).map((it) => it.checked)\n\t\t\t: [form['checkbox']?.checked];\n\n\t\tconst answers = inputsValues.map((it, idx) => ({\n\t\t\t...it,\n\t\t\tis_right: checkboxValues[idx],\n\t\t}));\n\n\t\treturn {\n\t\t\ttitle: value,\n\t\t\tanswers,\n\t\t\tquestion_type: typeQuestion,\n\t\t};\n\t};\n\n\tconst updateQuestion = (data) => {\n\t\tconst { title, answers, question_type } = data;\n\t\tconst checkedAnswers = checkAnswers(answers, question.answers);\n\t\tconst updatingQuestion = {\n\t\t\ttitle,\n\t\t\tquestion_type,\n\t\t\tanswer: answers.length,\n\t\t};\n\t\tonRequestUpdateQuestion({\n\t\t\tupdatingQuestion,\n\t\t\tcheckedAnswers,\n\t\t\tquetionId: question.id,\n\t\t});\n\t};\n\n\tconst checkAnswers = (currentAnswers, oldAnswers) => {\n\t\tconst patchAnswers = currentAnswers.filter((it) =>\n\t\t\toldAnswers.some((el) => el.id === +it.id),\n\t\t);\n\n\t\tconst postAnswers = currentAnswers.filter(\n\t\t\t(it) => !oldAnswers.some((el) => el.id === +it.id),\n\t\t);\n\n\t\tconst deleteAnswers = oldAnswers.filter((it) =>\n\t\t\tcurrentAnswers.every((el) => el.id != it.id),\n\t\t);\n\n\t\treturn { patchAnswers, postAnswers, deleteAnswers };\n\t};\n\n\tconst validateData = (data) => {\n\t\tconst errors = validate(data);\n\t\tsetErrors(errors);\n\t\treturn errors;\n\t};\n\n\tconst handleSaveClick = () => {\n\t\tconst data = getFormData();\n\t\tconst errors = validateData(data);\n\n\t\tif (Object.keys(errors).length === 0) {\n\t\t\tif (question) {\n\t\t\t\tupdateQuestion(data);\n\t\t\t} else {\n\t\t\t\tonRequestCreateQuestion(data);\n\t\t\t}\n\t\t\tonSetTypeQuestion('');\n\t\t}\n\t};\n\n\tconst handleCanselClick = () => onSetTypeQuestion('');\n\tconst handleAnswerDelete = (id) => {\n\t\tsetNewAnswers((state) => state.filter((it) => it.id != id));\n\t};\n\n\tconst handleAnswerAdd = () => {\n\t\tconst answer = { text: '', is_right: false, id: newAnswers.length };\n\t\tsetNewAnswers((state) => [...state, answer]);\n\t};\n\n\tconst handleInputChange = (evt) => setValue(evt.target.value);\n\n\tconst reorder = (list, startIndex, endIndex) => {\n\t\tconst result = Array.from(list);\n\t\tconst [removed] = result.splice(startIndex, 1);\n\t\tresult.splice(endIndex, 0, removed);\n\n\t\treturn result;\n\t};\n\n\tconst handleDragEnd = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = reorder(\n\t\t\tnewAnswers,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index,\n\t\t);\n\n\t\tonRequestMoveAnswer(result.draggableId, result.destination.index);\n\n\t\tsetNewAnswers(items);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"bg-white container pt-2 pb-3 rounded-lg shadow\"\n\t\t\tname={QUESTION_FORM}\n\t\t>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<h5 className=\"d-inline-block\">\n\t\t\t\t\t<label>Question:</label>\n\t\t\t\t</h5>\n\t\t\t\t<span className=\"float-right\">Type:{typeQuestion}</span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\taria-label=\"Field for the question\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t{errors?.question && (\n\t\t\t\t\t<div className=\"invalid-feedback\">{errors.question}</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<h5>Answers:</h5>\n\t\t\t<DragDropContext onDragEnd={handleDragEnd}>\n\t\t\t\t<Droppable droppableId=\"droppable\">\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tclassName={answerList}\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{newAnswers.map((it, idx) => (\n\t\t\t\t\t\t\t\t<Draggable key={it.id} draggableId={String(it.id)} index={idx}>\n\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tclassName={`p-1 ${snapshot.isDragging && selected}`}\n\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FormAnswer\n\t\t\t\t\t\t\t\t\t\t\t\tanswer={it}\n\t\t\t\t\t\t\t\t\t\t\t\ttypeQuestion={typeQuestion}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors?.answersInputs}\n\t\t\t\t\t\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t\t\t\t\t\t\tonAnswerDelete={handleAnswerDelete}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n\t\t\t{!(typeQuestion === 'number' && newAnswers.length >= 1) && (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary float-right\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Add answer\"\n\t\t\t\t\tonClick={handleAnswerAdd}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"bi bi-plus-circle\" />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={handleCanselClick}\n\t\t\t\t>\n\t\t\t\t\tCansel\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={handleSaveClick}\n\t\t\t\t>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{errors?.answersGeneral && (\n\t\t\t\t<div className=\"invalid-feedback d-block\">{errors.answersGeneral}</div>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nFormQuestion.propTypes = {\n\tquestion: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\tonRequestCreateQuestion: PropTypes.func,\n\tonRequestUpdateQuestion: PropTypes.func,\n\tonRequestMoveAnswer: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default FormQuestion;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious(value) {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t\tref.current = value;\n\t});\n\treturn ref.current;\n}\n","import React from 'react';\nimport FormQuestion from './FormQuestion';\nimport { connect } from 'react-redux';\nimport {\n\trequestCreateQuestion,\n\trequestUpdateQuestion,\n\trequestMoveAnswer,\n\tshowModal,\n} from '@models/actions';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst FormQuestionContainer = (props) => {\n\tconst location = useLocation();\n\tconst testId = location.pathname.replace(/\\/management\\//, '');\n\n\tconst onRequestCreateQuestion = (data) =>\n\t\tprops.requestCreateQuestion(testId, data);\n\n\tconst onRequestUpdateQuestion = (data) =>\n\t\tprops.requestUpdateQuestion(testId, data);\n\n\treturn (\n\t\t<FormQuestion\n\t\t\tonSetTypeQuestion={props.onSetTypeQuestion}\n\t\t\ttypeQuestion={props.typeQuestion}\n\t\t\tquestion={props.question}\n\t\t\tonRequestCreateQuestion={onRequestCreateQuestion}\n\t\t\tonRequestUpdateQuestion={onRequestUpdateQuestion}\n\t\t\tonRequestMoveAnswer={props.requestMoveAnswer}\n\t\t\tonModalShow={props.showModal}\n\t\t/>\n\t);\n};\n\nFormQuestionContainer.propTypes = {\n\tquestion: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\trequestCreateQuestion: PropTypes.func,\n\trequestUpdateQuestion: PropTypes.func,\n\trequestMoveAnswer: PropTypes.func,\n\tshowModal: PropTypes.func,\n};\n\nconst actions = {\n\trequestCreateQuestion,\n\trequestUpdateQuestion,\n\trequestMoveAnswer,\n\tshowModal,\n};\n\nexport default connect(null, actions)(FormQuestionContainer);\n","import React, { useState, useEffect } from 'react';\nimport QuestionList from './QuestionList';\nimport Dropdown from './Dropdown';\nimport FormQuestion from './FormQuestion';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst TestManagement = ({\n\ttest,\n\tonModalShow,\n\tonRequestDeleteTest,\n\tonRequestEditTest,\n}) => {\n\tconst [value, setValue] = useState(test?.title || '');\n\tconst [question, setQuestion] = useState(null);\n\tconst [typeQuestion, setTypeQuestion] = useState('');\n\tconst history = useHistory();\n\n\tuseEffect(() => question && !typeQuestion && setQuestion(null), [\n\t\ttypeQuestion,\n\t]);\n\n\tconst handleInputChange = (evt) => {\n\t\tsetValue(evt.target.value);\n\t};\n\n\tconst handleTestDelete = () => {\n\t\tonRequestDeleteTest(test.id, history);\n\t};\n\n\tconst handleTestSave = () => {\n\t\tonRequestEditTest(test.id, value, history);\n\t};\n\n\tconst handleBtnSaveClick = () =>\n\t\tonModalShow('Сохранить изменения?', handleTestSave);\n\n\tconst handleBtnDeleteClick = () =>\n\t\tonModalShow('Вы действительно хотите удалить тест?', handleTestDelete);\n\n\treturn (\n\t\t<div>\n\t\t\t<h4 className=\"input-group align-items-baseline mb-3\">\n\t\t\t\t<label>Test :</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control ml-2 rounded shadow-sm\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t</h4>\n\t\t\t<div className=\"btn-group mb-3\">\n\t\t\t\t<button className=\"btn btn-secondary\" onClick={handleBtnDeleteClick}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\n\t\t\t\t<button className=\"btn btn-primary\" onClick={handleBtnSaveClick}>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Link to=\"/tests\" className=\"btn btn-primary mb-3 float-right\">\n\t\t\t\tTo home\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<QuestionList\n\t\t\t\t\tquestions={test?.questions || []}\n\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\tonSetQuestion={setQuestion}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\ttypeQuestion={typeQuestion}\n\t\t\t\t/>\n\t\t\t\t{typeQuestion && (\n\t\t\t\t\t<FormQuestion\n\t\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\t\ttypeQuestion={typeQuestion || null}\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nTestManagement.propTypes = {\n\ttest: PropTypes.object || null,\n\tonModalShow: PropTypes.func,\n\tonRequestDeleteTest: PropTypes.func,\n\tonRequestEditTest: PropTypes.func,\n};\n\nexport default TestManagement;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TestManagement from './TestManagement';\nimport { requestDeleteTest, showModal, requestEditTest } from '@models/actions';\nimport PropTypes from 'prop-types';\n\nconst TestManagementContainer = ({\n\ttests,\n\tid,\n\tshowModal,\n\trequestDeleteTest,\n\trequestEditTest,\n}) => {\n\tconst test = tests.find((it) => it.id === +id) || null;\n\n\treturn (\n\t\t<div className=\"pt-4 pb-4\">\n\t\t\t<TestManagement\n\t\t\t\ttest={test}\n\t\t\t\tonModalShow={showModal}\n\t\t\t\tonRequestDeleteTest={requestDeleteTest}\n\t\t\t\tonRequestEditTest={requestEditTest}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nTestManagementContainer.propTypes = {\n\ttests: PropTypes.array,\n\tid: PropTypes.string,\n\tshowModal: PropTypes.func,\n\trequestDeleteTest: PropTypes.func,\n\trequestEditTest: PropTypes.func,\n};\n\nconst actions = { showModal, requestDeleteTest, requestEditTest };\n\nconst mapStateToProps = ({ tests }) => ({ tests });\n\nexport default connect(mapStateToProps, actions)(TestManagementContainer);\n","import React from 'react';\nimport TestManagementContainer from '@components/TestManagement';\nimport PropTypes from 'prop-types';\n\nconst ManagementPage = ({ id }) => {\n\treturn <TestManagementContainer id={id} />;\n};\n\nManagementPage.propTypes = {\n\tid: PropTypes.string,\n};\n\nexport default ManagementPage;\n","import React from 'react';\n\nimport './ErrorIndicator.scss';\n\nconst ErrorIndicator = ({ text }) => {\n\treturn (\n\t\t<div className=\"error-indicator\">\n\t\t\t<span>{text}</span>\n\t\t</div>\n\t);\n};\n\nexport default ErrorIndicator;\n","import React from 'react';\n\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch,\n} from 'react-router-dom';\nimport LoginPage from '@components/pages/LoginPage';\nimport NotFoundPage from '@components/pages/NotFoundPage';\nimport HomePage from '@components/pages/HomePage';\nimport ModalContainer from '@components/Modal';\nimport ManagementPage from '@components/pages/ManagementPage';\nimport ErrorIndicator from '@components/ErrorIndicator';\n\nconst App = ({ user, error }) => {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"container\">\n\t\t\t\t{error && <ErrorIndicator text={error} />}\n\t\t\t\t<ModalContainer />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\tuser ? <Redirect to=\"/tests\" /> : <Redirect to=\"/login\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\trender={() => (user ? <Redirect to=\"/tests\" /> : <LoginPage />)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/tests\" exact component={HomePage} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/tests/:id\"\n\t\t\t\t\t\trender={({ match }) => (\n\t\t\t\t\t\t\t<div>{`Test ${match?.params.id} execution screen`}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/management/:id\"\n\t\t\t\t\t\trender={({ match }) => <ManagementPage id={match?.params.id} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route component={NotFoundPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport App from './App';\nimport PropTypes from 'prop-types';\n\nclass AppContainer extends PureComponent {\n\trender() {\n\t\tconst { user, error } = this.props;\n\t\treturn <App user={user} error={error} />;\n\t}\n}\n\nAppContainer.propTypes = {\n\tuser: PropTypes.object,\n\terror: PropTypes.string,\n};\n\nconst mapStateToProps = ({ user, error }) => ({\n\tuser,\n\terror,\n});\n\nexport default connect(mapStateToProps, null)(AppContainer);\n","import { combineReducers } from 'redux';\nimport modal from './modal';\nimport user from './user';\nimport registration from './registration';\nimport error from './error';\nimport tests from './tests';\nimport filter from './filter';\n\nexport default combineReducers({\n\tmodal,\n\tuser,\n\tregistration,\n\terror,\n\ttests,\n\tfilter,\n});\n","import { SHOW_MODAL, HIDE_MODAL } from '@models/actions/actionTypes';\n\nexport default (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase SHOW_MODAL:\n\t\t\treturn { ...action.payload };\n\n\t\tcase HIDE_MODAL:\n\t\t\treturn false;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { FETCH_SIGNIN_SUCCESS, SIGNOUT } from '@models/actions/actionTypes';\n\nexport default (state = null, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SIGNIN_SUCCESS:\n\t\t\treturn { ...action.payload };\n\n\t\tcase SIGNOUT:\n\t\t\treturn null;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { TOGGLE_REGISTRATION } from '@models/actions/actionTypes';\n\nexport default (state = true, action) => {\n\tswitch (action.type) {\n\t\tcase TOGGLE_REGISTRATION:\n\t\t\treturn !state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { HIDE_ERROR, SHOW_ERROR } from '@models/actions/actionTypes';\n\nexport default (state = '', action) => {\n\tswitch (action.type) {\n\t\tcase SHOW_ERROR:\n\t\t\treturn action.payload;\n\n\t\tcase HIDE_ERROR:\n\t\t\treturn null;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import {\n\tFETCH_TESTS_SUCCESS,\n\tADD_TEST,\n\tADD_SORT_TESTS,\n\tDELETE_TEST,\n\tADD_QUESTION,\n\tUPDATE_QUESTION,\n\tDELETE_QUESTION,\n} from '@models/actions/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_TESTS_SUCCESS || ADD_SORT_TESTS:\n\t\t\treturn [...action.payload];\n\n\t\tcase ADD_SORT_TESTS:\n\t\t\treturn [...action.payload];\n\n\t\tcase ADD_TEST:\n\t\t\treturn [...state, action.payload];\n\n\t\tcase DELETE_TEST:\n\t\t\treturn state.filter((it) => action.payload !== it.id);\n\n\t\tcase ADD_QUESTION:\n\t\t\treturn state.map((it) =>\n\t\t\t\tit.id == action.payload.id\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\tquestions: [...it.questions, action.payload.data],\n\t\t\t\t\t  }\n\t\t\t\t\t: it,\n\t\t\t);\n\n\t\tcase UPDATE_QUESTION:\n\t\t\treturn state.map((it) =>\n\t\t\t\tit.id == action.payload.id\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\tquestions: it.questions.map((it) =>\n\t\t\t\t\t\t\t\tit.id == action.payload.data.id ? action.payload.data : it,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  }\n\t\t\t\t\t: it,\n\t\t\t);\n\n\t\tcase DELETE_QUESTION:\n\t\t\treturn state.map((it) =>\n\t\t\t\tit.id == action.payload.testId\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\tquestions: it.questions.filter(\n\t\t\t\t\t\t\t\t(it) => it.id != action.payload.questionId,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  }\n\t\t\t\t\t: it,\n\t\t\t);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { CHANGE_FILTER } from '@models/actions/actionTypes';\n\nexport default (state = '', action) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_FILTER:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import axios from 'axios';\nimport { baseURL, scopeKey } from '@constants';\n\nexport default axios.create({\n\twithCredentials: true,\n\tbaseURL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\t'scope-key': `${scopeKey}`,\n\t},\n\tresponseType: 'json',\n});\n","import axios from '@api/axios';\n\nconst requestFn = (method) => (url, params = {}) => axios[method](url, params);\n\nexport const getRequest = requestFn('get');\nexport const postRequest = requestFn('post');\nexport const deleteRequest = requestFn('delete');\nexport const patchRequest = requestFn('patch');\n","import {\n\tgetRequest,\n\tpostRequest,\n\tdeleteRequest,\n\tpatchRequest,\n} from './request';\n\nexport const fetchSignupUser = (data) => postRequest(`/signup`, data);\nexport const fetchSigninUser = (data) => postRequest(`/signin`, data);\nexport const fetchSignoutUser = () => deleteRequest(`/logout`);\nexport const fetchGetUser = () => getRequest('/users/current');\nexport const fetchCreateTest = (data) => postRequest(`/tests`, data);\nexport const fetchGetTests = (param = '') => getRequest(`/tests${param}`);\nexport const fetchDeleteTest = (id) => deleteRequest(`/tests/${id}`);\nexport const fetchEditTest = (id, data) => patchRequest(`/tests/${id}`, data);\nexport const fetchCreateQuestion = (id, data) =>\n\tpostRequest(`/tests/${id}/questions`, data);\nexport const fetchCreateAnswer = (id, data) =>\n\tpostRequest(`/questions/${id}/answers`, data);\nexport const fetchUpdateQuestion = (id, data) =>\n\tpatchRequest(`/questions/${id}`, data);\nexport const fetchUpdateAnswer = (id, data) =>\n\tpatchRequest(`/answers/${id}`, data);\nexport const fetchMoveAnswer = (id, position) =>\n\tpatchRequest(`/answers/${id}/insert_at/${position}`);\nexport const fetchDeleteQuestion = (id) => deleteRequest(`/questions/${id}`);\nexport const fetchDeleteAnswer = (id) => deleteRequest(`/answers/${id}`);\n","import { put, delay } from 'redux-saga/effects';\nimport { showError, hideError } from '@models/actions';\n\nexport function* showAndHideError(text, error) {\n\tyield put(showError(`${text} ${error}`));\n\tyield delay(7000);\n\tyield put(hideError());\n}\n","import { takeEvery, all, call, put } from 'redux-saga/effects';\nimport {\n\tFETCH_REGISTRATION,\n\tFETCH_SIGNIN,\n\tSIGNOUT,\n} from '@models/actions/actionTypes';\nimport {\n\tfetchSignupUser,\n\tfetchSigninUser,\n\tfetchSignoutUser,\n\tfetchGetUser,\n} from '@api';\nimport { fetchSigninSuccess, toggleRegistration } from '@models/actions';\nimport { showAndHideError } from './error';\n\nfunction* workerFetchRegistration({ payload }) {\n\ttry {\n\t\tyield fetchSignupUser(payload);\n\t\tyield put(toggleRegistration());\n\t} catch (error) {\n\t\tyield showAndHideError('Регистрация не удалась!', error);\n\t}\n}\n\nfunction* workerFetchSignin({ payload }) {\n\ttry {\n\t\tconst { data } = yield fetchSigninUser(payload);\n\t\tyield put(fetchSigninSuccess(data));\n\t\tyield fetchGetUser();\n\t} catch (error) {\n\t\tyield showAndHideError('Авторизация не удалась!', error);\n\t}\n}\n\nfunction* workerFetchSignout() {\n\ttry {\n\t\tyield call(fetchSignoutUser);\n\t} catch (error) {\n\t\tyield console.log(error);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([\n\t\ttakeEvery(FETCH_REGISTRATION, workerFetchRegistration),\n\t\ttakeEvery(FETCH_SIGNIN, workerFetchSignin),\n\t\ttakeEvery(SIGNOUT, workerFetchSignout),\n\t]);\n}\n","import { takeEvery, all, put } from 'redux-saga/effects';\nimport {\n\tfetchGetTests,\n\tfetchCreateTest,\n\tfetchDeleteTest,\n\tfetchEditTest,\n} from '@api';\nimport {\n\tfetchTestsSuccess,\n\taddTest,\n\taddSortTests,\n\tdeleteTest,\n\teditTest,\n} from '@models/actions';\nimport {\n\tFETCH_TESTS,\n\tREQUEST_ADD_TEST,\n\tSORT_TESTS,\n\tREQUEST_DELETE_TEST,\n\tREQUEST_EDIT_TEST,\n} from '@models/actions/actionTypes';\nimport { showAndHideError } from './error';\n\nfunction* workerFetchGetTests() {\n\ttry {\n\t\tconst {\n\t\t\tdata: { tests },\n\t\t} = yield fetchGetTests();\n\t\tyield put(fetchTestsSuccess(tests));\n\t} catch (error) {\n\t\tyield showAndHideError(\n\t\t\t'Не удалось выполнить загрузку данных с сервера',\n\t\t\terror,\n\t\t);\n\t}\n}\n\nfunction* workerFetchPostTest({ payload }) {\n\ttry {\n\t\tconst { data } = yield fetchCreateTest(payload);\n\t\tyield put(addTest(data));\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось загрузить данные на сервер', error);\n\t}\n}\n\nfunction* workerFetchGetSortTest({ payload }) {\n\ttry {\n\t\tconst {\n\t\t\tdata: { tests },\n\t\t} = yield fetchGetTests(`?sort=${payload}`);\n\t\tyield put(addSortTests(tests));\n\t} catch (error) {\n\t\tyield showAndHideError(\n\t\t\t'Не удалось выполнить загрузку данных с сервера',\n\t\t\terror,\n\t\t);\n\t}\n}\n\nfunction* workerFetchDeleteTest({ payload }) {\n\ttry {\n\t\tconst { id, history } = payload;\n\t\tyield fetchDeleteTest(id);\n\t\tyield put(deleteTest(payload));\n\t\tyield history.push('/tests');\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось удалить тест на сервере', error);\n\t}\n}\n\nfunction* workerFetchEditTest({ payload }) {\n\ttry {\n\t\tconst { id, value, history } = payload;\n\t\tyield fetchEditTest(id, { title: value });\n\t\tyield put(editTest(payload));\n\t\tyield history.push('/tests');\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось внести изменения на сервере', error);\n\t}\n}\n\nexport default function* () {\n\tyield all([\n\t\ttakeEvery(FETCH_TESTS, workerFetchGetTests),\n\t\ttakeEvery(REQUEST_ADD_TEST, workerFetchPostTest),\n\t\ttakeEvery(SORT_TESTS, workerFetchGetSortTest),\n\t\ttakeEvery(REQUEST_DELETE_TEST, workerFetchDeleteTest),\n\t\ttakeEvery(REQUEST_EDIT_TEST, workerFetchEditTest),\n\t]);\n}\n","import { takeEvery, all, put } from 'redux-saga/effects';\nimport {\n\tfetchCreateQuestion,\n\tfetchCreateAnswer,\n\tfetchUpdateQuestion,\n\tfetchUpdateAnswer,\n\tfetchDeleteQuestion,\n\tfetchMoveAnswer,\n\tfetchDeleteAnswer,\n} from '@api';\nimport { addQuestion, updateQuestion, deleteQuestion } from '@models/actions';\nimport {\n\tREQUEST_CREATE_QUESTION,\n\tREQUEST_UPDATE_QUESTION,\n\tREQUEST_DELETE_QUESTION,\n\tREQUEST_MOVE_ANSWER,\n} from '@models/actions/actionTypes';\nimport { showAndHideError } from './error';\n\nfunction* getCreatedQuestion(id, question) {\n\tconst { title, answers, question_type } = question;\n\tconst postedQuestion = {\n\t\ttitle,\n\t\tquestion_type,\n\t\tanswer: answers.length,\n\t};\n\tconst { data } = yield fetchCreateQuestion(id, postedQuestion);\n\treturn data;\n}\n\nfunction* getFetchedAnswers(array, func, id) {\n\treturn yield all(\n\t\tarray.map(function* (it) {\n\t\t\tconst { data } = yield func(id || it.id, it);\n\t\t\treturn data;\n\t\t}),\n\t);\n}\n\nfunction* workerFetchPostQuestionAndAnswers({ payload }) {\n\ttry {\n\t\tconst { testId, data } = payload;\n\n\t\tconst receivedQuestion = yield getCreatedQuestion(testId, data);\n\n\t\tconst receivedAnswers = yield getFetchedAnswers(\n\t\t\tdata.answers,\n\t\t\tfetchCreateAnswer,\n\t\t\treceivedQuestion.id,\n\t\t);\n\n\t\tyield put(\n\t\t\taddQuestion(testId, { ...receivedQuestion, answers: receivedAnswers }),\n\t\t);\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось загрузить данные на сервер', error);\n\t}\n}\n\nfunction* workerFetchPatchQuestionAndAnswers({ payload }) {\n\ttry {\n\t\tconst {\n\t\t\ttestId,\n\t\t\tdata: { updatingQuestion, checkedAnswers, quetionId },\n\t\t} = payload;\n\n\t\tconst { patchAnswers, postAnswers, deleteAnswers } = checkedAnswers;\n\n\t\tconst { data: receivedQuestion } = yield fetchUpdateQuestion(\n\t\t\tquetionId,\n\t\t\tupdatingQuestion,\n\t\t);\n\n\t\tlet updatedAnswers = [],\n\t\t\tcreatedAnswers = [];\n\n\t\tif (patchAnswers.length) {\n\t\t\tupdatedAnswers = yield getFetchedAnswers(patchAnswers, fetchUpdateAnswer);\n\t\t}\n\n\t\tif (postAnswers.length) {\n\t\t\tcreatedAnswers = yield getFetchedAnswers(\n\t\t\t\tpostAnswers,\n\t\t\t\tfetchCreateAnswer,\n\t\t\t\tquetionId,\n\t\t\t);\n\t\t}\n\n\t\tif (deleteAnswers.length) {\n\t\t\tyield getFetchedAnswers(deleteAnswers, fetchDeleteAnswer);\n\t\t}\n\n\t\tyield put(\n\t\t\tupdateQuestion(testId, {\n\t\t\t\t...receivedQuestion,\n\t\t\t\tanswers: updatedAnswers.concat(createdAnswers),\n\t\t\t}),\n\t\t);\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось обновить данные на сервере', error);\n\t}\n}\n\nfunction* workerFetchDeleteQuestion({ payload }) {\n\ttry {\n\t\tconst { testId, questionId } = payload;\n\t\tyield fetchDeleteQuestion(questionId);\n\t\tyield put(deleteQuestion(testId, questionId));\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось удалить вопрос', error);\n\t}\n}\n\nfunction* workerFetchMoveAnswer({ payload }) {\n\ttry {\n\t\tconst { id, position } = payload;\n\t\tyield fetchMoveAnswer(id, position);\n\t} catch (error) {\n\t\tyield showAndHideError(\n\t\t\t'Не удалось изменить позицию ответа на сервере',\n\t\t\terror,\n\t\t);\n\t}\n}\n\nexport default function* () {\n\tyield all([\n\t\ttakeEvery(REQUEST_CREATE_QUESTION, workerFetchPostQuestionAndAnswers),\n\t\ttakeEvery(REQUEST_UPDATE_QUESTION, workerFetchPatchQuestionAndAnswers),\n\t\ttakeEvery(REQUEST_DELETE_QUESTION, workerFetchDeleteQuestion),\n\t\ttakeEvery(REQUEST_MOVE_ANSWER, workerFetchMoveAnswer),\n\t]);\n}\n","import { all } from 'redux-saga/effects';\nimport users from './users';\nimport tests from './tests';\nimport questionsAnswers from './questionsAnswers';\n\nexport default function* () {\n\tyield all([users(), tests(), questionsAnswers()]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '@models/reducers';\nimport rootSaga from '@sagas';\nimport { locStorKey } from '@constants';\n\nconst initialState = JSON.parse(localStorage.getItem(locStorKey)) || {\n\tuser: null,\n\ttests: [],\n\terror: '',\n\tmodal: false,\n\tregistration: true,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeEnhancer(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@components/App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { locStorKey } from '@constants';\nimport '@styles/bootstrap.min.css';\nimport '@styles/general.scss';\n\nstore.subscribe(() => {\n\tlocalStorage.setItem(locStorKey, JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}