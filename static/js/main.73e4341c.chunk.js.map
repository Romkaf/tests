{"version":3,"sources":["components/Modal/Modal.module.scss","components/TestManagement/Dropdown/Dropdown.module.scss","components/TestManagement/FormQuestion/FormQuestion.module.scss","components/Login/InputField/InputField.module.scss","components/Login/Login.module.scss","components/InputGroup/InputGroup.module.scss","components/TestManagement/FormQuestion/FormAnswer/FormAnswer.module.scss","constants/index.js","components/Login/InputField/InputField.jsx","components/Login/Button/Button.jsx","components/Login/validate.js","components/Login/Login.jsx","models/actions/actionTypes.js","models/actions/user.js","models/actions/modal.js","models/actions/registration.js","models/actions/error.js","models/actions/tests.js","models/actions/questionsAnswers.js","models/actions/spinner.js","components/Login/LoginContainer.jsx","components/pages/LoginPage/LoginPage.jsx","components/pages/NotFoundPage/NotFoundPage.jsx","components/TestTable/Row/Row.jsx","components/TestTable/TestTable.jsx","components/Spinner/Spinner.jsx","components/TestTable/TestTableContainer.jsx","components/InputGroup/InputGroup.jsx","utils/debounce.js","components/InputGroup/InputGroupContainer.jsx","models/actions/filter.js","components/Pagination/Pagination.jsx","components/Pagination/createPages.js","components/Pagination/PaginationContainer.jsx","components/pages/HomePage/HomePage.jsx","components/pages/HomePage/HomePageContainer.jsx","components/Modal/Modal.jsx","components/Modal/ModalContainer.jsx","components/TestManagement/QuestionList/QuestionItem/QuestionItem.jsx","components/TestManagement/QuestionList/QuestionList.jsx","components/TestManagement/QuestionList/QuestionListContainer.jsx","components/TestManagement/Dropdown/Dropdown.jsx","components/TestManagement/FormQuestion/FormAnswer/FormAnswer.jsx","components/TestManagement/FormQuestion/validate.js","components/TestManagement/FormQuestion/FormQuestion.jsx","utils/customHooks.js","components/TestManagement/FormQuestion/FormQuestionContainer.jsx","components/TestManagement/TestManagement.jsx","components/TestManagement/TestManagementContainer.jsx","components/pages/ManagementPage/ManagementPage.jsx","components/ErrorIndicator/ErrorIndicator.jsx","components/TestDoing/QuestionList/QuestionItem/QuestionItem.jsx","components/TestDoing/QuestionList/QuestionList.jsx","components/TestDoing/TestDoing.jsx","components/TestDoing/TestDoingContainer.jsx","components/pages/TestPage/TestPage.jsx","components/App/App.jsx","components/App/AppContainer.jsx","models/reducers/index.js","models/reducers/modal.js","models/reducers/user.js","models/reducers/registration.js","models/reducers/error.js","models/reducers/tests.js","models/reducers/filter.js","models/reducers/spinner.js","api/axios.js","api/request.js","api/index.js","sagas/error.js","sagas/users.js","sagas/tests.js","sagas/questionsAnswers.js","sagas/index.js","store/index.js","index.js"],"names":["module","exports","LOGIN_FORM","locStorKey","QUESTION_FORM","INPUTS_ID","ERROR_TEXTS","MODAL_MESSAGES","InputField","type","id","label","error","className","htmlFor","required","styles","Button","func","color","onClick","REQUIRED","MIN_NAME_LENGTH","MIN_PASSWORD_LENGTH","NOT_MATCH","validator","value","min","String","length","Login","onFetchRegistration","onFetchSignin","onToggleRegistration","isRegistrated","useState","errors","setErrors","userName","password","passwordConfirmation","admin","handleBtnClick","evt","target","blur","getDataForm","form","document","forms","username","password_confirmation","is_admin","checked","validateData","data","formErrors","fields","undefined","validate","Object","keys","root","name","SHOW_MODAL","HIDE_MODAL","FETCH_REGISTRATION","FETCH_SIGNIN","FETCH_SIGNIN_SUCCESS","SIGNOUT","TOGGLE_REGISTRATION","SHOW_ERROR","HIDE_ERROR","FETCH_TESTS","FETCH_TESTS_SUCCESS","REQUEST_ADD_TEST","ADD_TEST","CHANGE_FILTER","REQUEST_DELETE_TEST","DELETE_TEST","REQUEST_EDIT_TEST","REQUEST_CREATE_QUESTION","ADD_QUESTION","UPDATE_QUESTION","REQUEST_UPDATE_QUESTION","REQUEST_DELETE_QUESTION","DELETE_QUESTION","REQUEST_MOVE_ANSWER","SET_CURRENT_PAGE","SET_SORT_TYPE","SHOW_SPINNER","HIDE_SPINNER","fetchSigninSuccess","payload","showModal","text","singleBtnText","toggleRegistration","showError","fetchTestsSuccess","deleteTest","editTest","addQuestion","updateQuestion","deleteQuestion","testId","questionId","hideSpinner","actions","fetchRegistration","fetchSignin","connect","registration","LoginPage","NotFoundPage","to","Row","item","onModalShow","isAdmin","title","created_at","date","Date","toLocaleDateString","history","useHistory","handleTestStart","push","tabIndex","tagName","TestTable","tests","map","Spinner","role","fetchTests","currentPage","sortType","filter","user","spinner","useEffect","InputGroup","btnTitle1","btnTitle2","funcBtn1","funcBtn2","onChangeFilter","setValue","setError","classInput","classnames","handleFilterChange","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","trim","defaultValue","onChange","autoFocus","changeFilter","props","Pagination","totalPages","onCurrentPageSet","pages","pagesCount","i","createPages","aria-label","it","page","href","setCurrentPage","HomePage","onSignOut","onRequestAddTest","onSortTypeSet","isNewTest","setIsNewTest","signOut","requestAddTest","setSortType","Modal","onModalConfirm","onModalHide","modal","current","focus","body","classList","add","lock","remove","useRef","handleModalCansel","ref","contains","onKeyDown","keyCode","aria-hidden","hideModal","QuestionItem","onSetTypeQuestion","typeQuestion","onSetQuestion","onRequestDeleteQuestion","QuestionList","questions","question_type","question","propTypes","PropTypes","array","requestDeleteQuestion","useLocation","pathname","replace","Dropdown","dropBtn","disabled","dropdown","show","dropElem","handleTypeBtnClick","textContent","handleDropBtnClick","toggle","FormAnswer","answer","onAnswerDelete","keyId","find","is_right","isRight","setIsRight","wrapperAnswerDelete","data-id","hidden","state","btn","INDICATE_ANSWER","TWO_ANSWER","ONE_RIGHT_ANSWER","FormQuestion","onRequestCreateQuestion","onRequestUpdateQuestion","onRequestMoveAnswer","shouldUpdate","answers","newAnswers","setNewAnswers","prevQuestion","usePrevious","answerList","selected","checkAnswers","currentAnswers","oldAnswers","patchAnswers","some","el","postAnswers","deleteAnswers","every","answersGeneral","forEach","answersInputs","handleAnswerDelete","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","draggableId","droppableId","provided","droppableProps","innerRef","idx","snapshot","isDragging","draggableProps","dragHandleProps","placeholder","inputsValues","dataset","checkboxValues","getFormData","checkedAnswers","updatingQuestion","quetionId","requestCreateQuestion","requestUpdateQuestion","requestMoveAnswer","position","TestManagement","test","onRequestDeleteTest","onRequestEditTest","setQuestion","setTypeQuestion","SAVE_TEST","handleTestDelete","handleTestSave","requestDeleteTest","requestEditTest","ManagementPage","ErrorIndicator","count","classContainer","classItem","active","choiceType","key","console","wrang","TestDoing","setCount","handleRouteChange","getAnswers","querySelectorAll","elements","userAnswers","rightAnswers","TestPage","App","exact","path","render","match","params","component","AppContainer","PureComponent","combineReducers","action","totalCount","meta","total_pages","total_count","axios","create","withCredentials","baseURL","headers","responseType","requestFn","method","url","getRequest","postRequest","deleteRequest","patchRequest","fetchSigninUser","fetchSignoutUser","fetchCreateTest","fetchGetTests","param","fetchDeleteTest","fetchEditTest","fetchCreateQuestion","fetchCreateAnswer","fetchUpdateAnswer","fetchMoveAnswer","fetchDeleteAnswer","showAndHideError","put","delay","workerFetchRegistration","workerFetchSignin","workerFetchSignout","rootSaga","call","log","all","takeEvery","workerFetchGetTests","workerFetchPostTest","workerFetchDeleteTest","workerFetchEditTest","getCreatedQuestion","getFetchedAnswers","workerFetchPostQuestionAndAnswers","workerFetchPatchQuestionAndAnswers","workerFetchDeleteQuestion","workerFetchMoveAnswer","postedQuestion","a","receivedQuestion","receivedAnswers","updatedAnswers","createdAnswers","concat","warn","users","questionsAnswers","initialState","JSON","parse","localStorage","getItem","sagaMiddleware","createSagaMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","run","subscribe","setItem","stringify","getState","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.73e4341c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Modal_root__3Mk4M\",\"lock\":\"Modal_lock__2eL6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__FADwO\",\"show\":\"Dropdown_show__2xDEa\",\"disabled\":\"Dropdown_disabled__KzqoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerList\":\"FormQuestion_answerList__DDAdZ\",\"selected\":\"FormQuestion_selected__1GAq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"InputField_error__3BKdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__1q63o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"InputGroup_error__1ruXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FormAnswer_btn__2dQVj\"};","export const keyCodeEsc = 27;\nexport const baseURL = 'https://snp-tests.herokuapp.com/api/v1/';\nexport const mockURL = 'http://localhost:3200/users';\nexport const scopeKey = '?J_8TB]Eej:GVqR';\nexport const LOGIN_FORM = 'LOGIN_FORM';\nexport const locStorKey = 'testsLocStore';\nexport const QUESTION_FORM = 'QUESTION_FORM';\n\nexport const INPUTS_ID = {\n\tuserName: 'username',\n\tpassword: 'password',\n\tpasswordConfirmation: 'passwordConfirmation',\n\tadmin: 'admin',\n};\nexport const ERROR_TEXTS = {\n\tMIN_NAME_LENGTH: 'Requires at least two characters',\n\tMIN_PASSWORD_LENGTH: 'Requires at least six characters',\n\tNOT_MATCH: 'Password does not match',\n\tREQUIRED: 'Required to fill',\n\tINDICATE_ANSWER: 'Indicate the correct answer',\n\tONE_RIGHT_ANSWER: 'Requires only one right answer',\n\tONE_ANSWER: 'Requires at least one answer',\n\tTWO_ANSWER: 'Requires at least two answers',\n};\n\nexport const MODAL_MESSAGES = {\n\tDELETE_TEST: 'Do you really want to remove this test?',\n\tSAVE_TEST: 'Do you want to save changes?',\n\tDELETE_QUESTION: 'Do you really want to remove this question?',\n\tDELETE_ANSWER: 'Do you really want to remove this answer?',\n\tSTART_TEST: 'Do you want to start the test?',\n};\n","import React from 'react';\nimport styles from './InputField.module.scss';\n\nconst InputField = ({ type, id, label, error }) => {\n\treturn (\n\t\t<div className=\"form-group position-relative\">\n\t\t\t<label htmlFor={id}>{label}</label>\n\t\t\t<input type={type} className=\"form-control\" id={id} required />\n\t\t\t{error && <span className={styles.error}>{error}</span>}\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import React from 'react';\n\nconst Button = ({ label, func, color }) => {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={`btn btn-block btn-${color} mt-4`}\n\t\t\tonClick={func}\n\t\t>\n\t\t\t{label}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import { ERROR_TEXTS } from '@constants';\n\nconst {\n\tREQUIRED,\n\tMIN_NAME_LENGTH,\n\tMIN_PASSWORD_LENGTH,\n\tNOT_MATCH,\n} = ERROR_TEXTS;\n\nconst validator = {\n\tisMinLength: (value, min) => String(value).length > min,\n};\n\nexport const validate = (fields) => {\n\tconst errors = {};\n\tif (!validator.isMinLength(fields.username, 1)) {\n\t\terrors.username = MIN_NAME_LENGTH;\n\t}\n\n\tif (!fields.username) {\n\t\terrors.username = REQUIRED;\n\t}\n\n\tif (!validator.isMinLength(fields.password, 5)) {\n\t\terrors.password = MIN_PASSWORD_LENGTH;\n\t}\n\n\tif (!fields.password) {\n\t\terrors.password = REQUIRED;\n\t}\n\n\tif (fields.password_confirmation !== undefined) {\n\t\tif (fields.password_confirmation !== fields.password) {\n\t\t\terrors.password_confirmation = NOT_MATCH;\n\t\t}\n\n\t\tif (!fields.password_confirmation) {\n\t\t\terrors.password_confirmation = REQUIRED;\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import React, { useState } from 'react';\nimport { LOGIN_FORM, INPUTS_ID } from '@constants';\nimport InputField from './InputField';\nimport styles from './Login.module.scss';\nimport Button from './Button/Button';\nimport { validate } from './validate';\n\nconst Login = ({\n\tonFetchRegistration,\n\tonFetchSignin,\n\tonToggleRegistration,\n\tisRegistrated,\n}) => {\n\tconst [errors, setErrors] = useState({});\n\tconst { userName, password, passwordConfirmation, admin } = INPUTS_ID;\n\n\tconst handleBtnClick = (evt) => {\n\t\tonToggleRegistration();\n\t\tsetErrors({});\n\t\tevt.target.blur();\n\t};\n\n\tconst getDataForm = () => {\n\t\tconst form = document.forms[LOGIN_FORM];\n\n\t\tconst newData = {\n\t\t\tusername: form[userName].value,\n\t\t\tpassword: form[password].value,\n\t\t\tpassword_confirmation: form[passwordConfirmation]?.value,\n\t\t\tis_admin: form[admin]?.checked,\n\t\t};\n\n\t\treturn newData;\n\t};\n\n\tconst validateData = (data, func) => {\n\t\tconst formErrors = validate(data);\n\t\tsetErrors(formErrors);\n\t\tif (Object.keys(formErrors).length === 0) {\n\t\t\tfunc(data);\n\t\t}\n\t};\n\n\tconst handleLoginClick = () => {\n\t\tconst data = getDataForm();\n\t\tvalidateData(data, onFetchSignin);\n\t};\n\n\tconst handleRegistrationClick = (evt) => {\n\t\tconst data = getDataForm();\n\t\tvalidateData(data, onFetchRegistration);\n\t};\n\n\treturn (\n\t\t<form className={styles.root} name={LOGIN_FORM}>\n\t\t\t<InputField\n\t\t\t\ttype=\"text\"\n\t\t\t\tid={userName}\n\t\t\t\tlabel=\"Login\"\n\t\t\t\terror={errors?.username}\n\t\t\t/>\n\n\t\t\t<InputField\n\t\t\t\ttype=\"password\"\n\t\t\t\tid={password}\n\t\t\t\tlabel=\"Password\"\n\t\t\t\terror={errors?.password}\n\t\t\t/>\n\n\t\t\t{!isRegistrated && (\n\t\t\t\t<InputField\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid={passwordConfirmation}\n\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\terror={errors?.password_confirmation}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isRegistrated ? (\n\t\t\t\t<>\n\t\t\t\t\t<Button label=\"Log In\" func={handleLoginClick} color=\"primary\" />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"I don't have an account\"\n\t\t\t\t\t\tfunc={handleBtnClick}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"mb-3 form-check\">\n\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id={admin} />\n\t\t\t\t\t\t<label htmlFor={admin} className=\"form-check-label\">\n\t\t\t\t\t\t\tAre you an admin?\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"Registration\"\n\t\t\t\t\t\tfunc={handleRegistrationClick}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"I have an account\"\n\t\t\t\t\t\tfunc={handleBtnClick}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nexport default Login;\n","export const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const FETCH_REGISTRATION = 'FETCH_REGISTRATION';\nexport const FETCH_SIGNIN = 'FETCH_SIGNIN';\nexport const FETCH_SIGNIN_SUCCESS = 'FETCH_SIGNIN_SUCCESS';\nexport const SIGNOUT = 'SIGNOUT';\nexport const TOGGLE_REGISTRATION = 'TOGGLE_REGISTRATION';\nexport const SHOW_ERROR = 'SHOW_ERROR';\nexport const HIDE_ERROR = 'HIDE_ERROR';\nexport const FETCH_TESTS = 'FETCH_TESTS';\nexport const FETCH_TESTS_SUCCESS = 'FETCH_TESTS_SUCCESS';\nexport const REQUEST_ADD_TEST = 'REQUEST_ADD_TEST';\nexport const ADD_TEST = 'ADD_TEST';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const REQUEST_DELETE_TEST = 'REQUEST_DELETE_TEST';\nexport const DELETE_TEST = 'DELETE_TEST';\nexport const REQUEST_EDIT_TEST = 'REQUEST_EDIT_TEST';\nexport const EDIT_TEST = 'EDIT_TEST';\nexport const REQUEST_CREATE_QUESTION = 'REQUEST_CREATE_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\nexport const REQUEST_UPDATE_QUESTION = 'REQUEST_UPDATE_QUESTION';\nexport const REQUEST_DELETE_QUESTION = 'REQUEST_DELETE_QUESTION';\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\nexport const REQUEST_MOVE_ANSWER = 'REQUEST_MOVE_ANSWER';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_SORT_TYPE = 'SET_SORT_TYPE';\nexport const SHOW_SPINNER = 'SHOW_SPINNER';\nexport const HIDE_SPINNER = 'HIDE_SPINNER';\n","import {\n\tFETCH_REGISTRATION,\n\tFETCH_SIGNIN,\n\tFETCH_SIGNIN_SUCCESS,\n\tSIGNOUT,\n} from './actionTypes';\n\nexport const fetchRegistration = (data) => {\n\treturn {\n\t\ttype: FETCH_REGISTRATION,\n\t\tpayload: data,\n\t};\n};\n\nexport const fetchSignin = (data) => {\n\treturn {\n\t\ttype: FETCH_SIGNIN,\n\t\tpayload: data,\n\t};\n};\n\nexport const fetchSigninSuccess = (data) => {\n\treturn {\n\t\ttype: FETCH_SIGNIN_SUCCESS,\n\t\tpayload: data,\n\t};\n};\n\nexport const signOut = () => {\n\treturn {\n\t\ttype: SIGNOUT,\n\t};\n};\n","import { SHOW_MODAL, HIDE_MODAL } from './actionTypes';\n\nexport const showModal = (text, func, singleBtnText) => {\n\treturn {\n\t\ttype: SHOW_MODAL,\n\t\tpayload: { text, func, singleBtnText },\n\t};\n};\n\nexport const hideModal = () => {\n\treturn {\n\t\ttype: HIDE_MODAL,\n\t};\n};\n","import { TOGGLE_REGISTRATION } from './actionTypes';\n\nexport const toggleRegistration = () => {\n\treturn {\n\t\ttype: TOGGLE_REGISTRATION,\n\t};\n};\n","import { SHOW_ERROR, HIDE_ERROR } from './actionTypes';\n\nexport const hideError = () => ({\n\ttype: HIDE_ERROR,\n});\n\nexport const showError = (text) => ({ type: SHOW_ERROR, payload: text });\n","import {\n\tFETCH_TESTS,\n\tFETCH_TESTS_SUCCESS,\n\tREQUEST_ADD_TEST,\n\tADD_TEST,\n\tREQUEST_DELETE_TEST,\n\tDELETE_TEST,\n\tREQUEST_EDIT_TEST,\n\tEDIT_TEST,\n\tSET_CURRENT_PAGE,\n\tSET_SORT_TYPE,\n} from './actionTypes';\n\nexport const fetchTests = (currentPage, sortType, filter) => ({\n\ttype: FETCH_TESTS,\n\tpayload: { currentPage, sortType, filter },\n});\n\nexport const fetchTestsSuccess = (data) => ({\n\ttype: FETCH_TESTS_SUCCESS,\n\tpayload: data,\n});\n\nexport const requestAddTest = (title, history) => ({\n\ttype: REQUEST_ADD_TEST,\n\tpayload: { title, history },\n});\n\nexport const addTest = (test) => ({ type: ADD_TEST, payload: test });\n\nexport const requestDeleteTest = (id, history) => ({\n\ttype: REQUEST_DELETE_TEST,\n\tpayload: { id, history },\n});\n\nexport const requestEditTest = (id, value, history) => ({\n\ttype: REQUEST_EDIT_TEST,\n\tpayload: { id, value, history },\n});\n\nexport const deleteTest = (id) => ({ type: DELETE_TEST, payload: id });\nexport const editTest = (id) => ({ type: EDIT_TEST, payload: id });\nexport const setCurrentPage = (page) => ({\n\ttype: SET_CURRENT_PAGE,\n\tpayload: page,\n});\nexport const setSortType = (type) => ({ type: SET_SORT_TYPE, payload: type });\n","import {\n\tREQUEST_CREATE_QUESTION,\n\tADD_QUESTION,\n\tREQUEST_UPDATE_QUESTION,\n\tUPDATE_QUESTION,\n\tREQUEST_DELETE_QUESTION,\n\tDELETE_QUESTION,\n\tREQUEST_MOVE_ANSWER,\n} from './actionTypes';\n\nexport const requestCreateQuestion = (testId, data) => ({\n\ttype: REQUEST_CREATE_QUESTION,\n\tpayload: { testId, data },\n});\n\nexport const requestUpdateQuestion = (testId, data) => ({\n\ttype: REQUEST_UPDATE_QUESTION,\n\tpayload: { testId, data },\n});\n\nexport const addQuestion = (id, data) => ({\n\ttype: ADD_QUESTION,\n\tpayload: { id, data },\n});\n\nexport const updateQuestion = (id, data) => ({\n\ttype: UPDATE_QUESTION,\n\tpayload: { id, data },\n});\n\nexport const requestDeleteQuestion = (testId, questionId) => ({\n\ttype: REQUEST_DELETE_QUESTION,\n\tpayload: { testId, questionId },\n});\n\nexport const deleteQuestion = (testId, questionId) => ({\n\ttype: DELETE_QUESTION,\n\tpayload: { testId, questionId },\n});\n\nexport const requestMoveAnswer = (id, position) => ({\n\ttype: REQUEST_MOVE_ANSWER,\n\tpayload: { id, position },\n});\n","import { HIDE_SPINNER, SHOW_SPINNER } from './actionTypes';\n\nexport const hideSpinner = () => ({\n\ttype: HIDE_SPINNER,\n});\n\nexport const showSpinner = () => ({\n\ttype: SHOW_SPINNER,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport {\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n} from '@models/actions';\n\nconst LoginContainer = ({\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n\tisRegistrated,\n}) => {\n\treturn (\n\t\t<Login\n\t\t\tonFetchRegistration={fetchRegistration}\n\t\t\tonFetchSignin={fetchSignin}\n\t\t\tonToggleRegistration={toggleRegistration}\n\t\t\tisRegistrated={isRegistrated}\n\t\t/>\n\t);\n};\n\nconst actions = {\n\tfetchRegistration,\n\tfetchSignin,\n\ttoggleRegistration,\n};\n\nconst mapStateToProps = ({ registration }) => ({ isRegistrated: registration });\n\nexport default connect(mapStateToProps, actions)(LoginContainer);\n","import React from 'react';\nimport LoginContainer from '@components/Login';\n\nconst LoginPage = () => <LoginContainer />;\n\nexport default LoginPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n\t<div className=\"alert alert-primary mt-3\">\n\t\t<h3>Page not found</h3>\n\t\t<p>We are sorry but the page you are looking for does not exist.</p>\n\t\t<Link to=\"/\" className=\"btn btn-primary\">\n\t\t\tTo home\n\t\t</Link>\n\t</div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MODAL_MESSAGES } from '@constants';\n\nconst Row = ({ item, onModalShow, isAdmin }) => {\n\tconst { title, created_at, id } = item;\n\tconst date = new Date(created_at).toLocaleDateString();\n\tconst history = useHistory();\n\n\tconst handleRowClick = (evt) => {\n\t\tevt.target.tagName !== 'BUTTON' &&\n\t\t\tevt.target.tagName !== 'I' &&\n\t\t\tonModalShow(MODAL_MESSAGES.START_TEST, handleTestStart);\n\t};\n\n\tconst handleBtnEditClick = () => history.push(`/management/${id}`);\n\n\tconst handleTestStart = () => history.push(`/tests/${id}`);\n\n\treturn (\n\t\t<tr className=\"btn-light\" tabIndex=\"0\" onClick={handleRowClick}>\n\t\t\t<td>{title}</td>\n\t\t\t<td>{date}</td>\n\t\t\t<td>\n\t\t\t\t{isAdmin && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\t\t\ttitle=\"Edit\"\n\t\t\t\t\t\tonClick={handleBtnEditClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"bi bi-pencil-square\" />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nRow.propTypes = {\n\titem: PropTypes.object,\n\tonModalShow: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n};\n\nexport default Row;\n","import React from 'react';\nimport Row from './Row';\nimport PropTypes from 'prop-types';\n\nconst TestTable = ({ onModalShow, tests, isAdmin }) => {\n\treturn (\n\t\t<div>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Test</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\n\t\t\t\t<tbody>\n\t\t\t\t\t{tests.map((item) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nTestTable.propTypes = {\n\ttests: PropTypes.array,\n\tonModalShow: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n};\n\nexport default TestTable;\n","import React from 'react';\n\nconst Spinner = () => (\n\t<div className=\"text-center mt-5\">\n\t\t<div className=\"spinner-border\" role=\"status\">\n\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t</div>\n\t</div>\n);\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport TestTable from './TestTable';\nimport Spinner from '@components/Spinner';\nimport { connect } from 'react-redux';\nimport { showModal, fetchTests } from '@models/actions';\nimport PropTypes from 'prop-types';\n\nconst TestTableContainer = ({\n\tshowModal,\n\ttests,\n\tisAdmin,\n\tfilter,\n\tfetchTests,\n\tcurrentPage,\n\tsortType,\n\tspinner,\n}) => {\n\tuseEffect(() => fetchTests(currentPage, sortType, filter), [\n\t\tcurrentPage,\n\t\tsortType,\n\t\tfilter,\n\t]);\n\n\tif (spinner) {\n\t\treturn <Spinner />;\n\t}\n\n\treturn <TestTable onModalShow={showModal} tests={tests} isAdmin={isAdmin} />;\n};\n\nTestTableContainer.propTypes = {\n\ttests: PropTypes.array,\n\tfetchTests: PropTypes.func,\n\tshowModal: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tfilter: PropTypes.string,\n\tcurrentPage: PropTypes.number,\n\tsortType: PropTypes.string,\n\tspinner: PropTypes.bool,\n};\n\nconst actions = {\n\tshowModal,\n\tfetchTests,\n};\n\nconst mapStateToProps = ({ tests, user, filter, spinner }) => ({\n\ttests: tests.tests,\n\tcurrentPage: tests.currentPage,\n\tsortType: tests.sortType,\n\tisAdmin: user?.is_admin,\n\tfilter,\n\tspinner,\n});\n\nexport default connect(mapStateToProps, actions)(TestTableContainer);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './InputGroup.module.scss';\nimport classnames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { debounce } from '@utils/debounce';\n\nconst InputGroup = ({\n\ttitle,\n\tbtnTitle1,\n\tbtnTitle2,\n\tfuncBtn1,\n\tfuncBtn2,\n\tisAdmin,\n\tonChangeFilter,\n\tfilter,\n}) => {\n\tconst [value, setValue] = useState('');\n\tconst [error, setError] = useState(false);\n\tconst history = useHistory();\n\tconst classInput = classnames('form-control', 'mr-2', 'shadow-sm', {\n\t\t'is-invalid': error,\n\t});\n\n\tconst handleFilterChange = debounce(function (value) {\n\t\tonChangeFilter(value.trim());\n\t\thistory.push(`/tests?search=${value.trim()}`);\n\t}, 250);\n\n\tconst handleInputChange = (evt) => {\n\t\ttitle === 'Filter'\n\t\t\t? handleFilterChange(evt.target.value)\n\t\t\t: setValue(evt.target.value);\n\t};\n\n\tconst handleBtnCreateClick = () => {\n\t\tif (!value) {\n\t\t\tsetError(true);\n\t\t} else {\n\t\t\tsetError(false);\n\t\t\tfuncBtn2(value.trim(), history);\n\t\t}\n\t};\n\n\tconst handleBtn2Click = () => {\n\t\tif (title === 'Filter') {\n\t\t\tfuncBtn2();\n\t\t} else {\n\t\t\thandleBtnCreateClick();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"mb-2\">\n\t\t\t<div className=\"input-group input-group mb-1\">\n\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t<label htmlFor={title} className=\"btn font-weight-bold\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tid={title}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tdefaultValue={title === 'Filter' ? filter : undefined}\n\t\t\t\t\tvalue={title === 'Filter' ? undefined : value}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tautoFocus={title === 'Test title' && true}\n\t\t\t\t/>\n\t\t\t\t{error && <div className={styles.error}>Required to fill</div>}\n\t\t\t</div>\n\t\t\t<div className=\"btn-group p-2\">\n\t\t\t\t<button className=\"btn btn-secondary\" onClick={funcBtn1}>\n\t\t\t\t\t{btnTitle1}\n\t\t\t\t</button>\n\t\t\t\t{isAdmin && (\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleBtn2Click}>\n\t\t\t\t\t\t{btnTitle2}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nInputGroup.propTypes = {\n\ttitle: PropTypes.string,\n\tbtnTitle1: PropTypes.string,\n\tbtnTitle2: PropTypes.string,\n\tfuncBtn1: PropTypes.func,\n\tfuncBtn2: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tonChangeFilter: PropTypes.func,\n};\n\nexport default InputGroup;\n","export function debounce(func, wait, immediate) {\n\tlet timeout;\n\n\treturn function executedFunction() {\n\t\tconst context = this;\n\t\tconst args = arguments;\n\n\t\tconst later = function () {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\n\t\tconst callNow = immediate && !timeout;\n\n\t\tclearTimeout(timeout);\n\n\t\ttimeout = setTimeout(later, wait);\n\n\t\tif (callNow) func.apply(context, args);\n\t};\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport InputGroup from './InputGroup';\nimport { changeFilter } from '@models/actions';\n\nconst InputGroupContainer = (props) => (\n\t<InputGroup\n\t\ttitle={props.title}\n\t\tbtnTitle1={props.btnTitle1}\n\t\tbtnTitle2={props.btnTitle2}\n\t\tfuncBtn1={props.funcBtn1}\n\t\tfuncBtn2={props.funcBtn2}\n\t\tisAdmin={props.isAdmin}\n\t\tonChangeFilter={props.changeFilter}\n\t\tfilter={props.filter}\n\t/>\n);\n\nconst mapStateToProps = ({ filter }) => ({ filter });\n\nexport default connect(mapStateToProps, { changeFilter })(InputGroupContainer);\n","import { CHANGE_FILTER } from './actionTypes';\n\nexport const changeFilter = (value) => ({\n\ttype: CHANGE_FILTER,\n\tpayload: value,\n});\n","import React from 'react';\nimport { createPages } from './createPages';\n\nconst Pagination = ({ totalPages, currentPage, onCurrentPageSet }) => {\n\tconst pages = [];\n\tcreatePages(pages, totalPages, currentPage);\n\n\tconst handlePageClick = (page) => () => onCurrentPageSet(page);\n\n\treturn (\n\t\t<nav aria-label=\"Test pages\" className=\"ml-2\">\n\t\t\t<ul className=\"pagination\">\n\t\t\t\t{pages.map((it) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={`page-item ${currentPage == it ? 'active' : ''}`}\n\t\t\t\t\t\tkey={it}\n\t\t\t\t\t\tonClick={handlePageClick(it)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button className=\"page-link\" href=\"#\">\n\t\t\t\t\t\t\t{it}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default Pagination;\n","export function createPages(pages, pagesCount, currentPage) {\n\tif (pagesCount > 10) {\n\t\tif (currentPage > 5) {\n\t\t\tfor (let i = currentPage - 4; i <= currentPage + 5; i++) {\n\t\t\t\tpages.push(i);\n\t\t\t\tif (i == pagesCount) break;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 1; i <= 10; i++) {\n\t\t\t\tpages.push(i);\n\t\t\t\tif (i == pagesCount) break;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (let i = 1; i <= pagesCount; i++) {\n\t\t\tpages.push(i);\n\t\t}\n\t}\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Pagination from './Pagination';\nimport { setCurrentPage } from '@models/actions';\n\nconst PaginationContainer = ({ totalPages, currentPage, setCurrentPage }) => {\n\treturn (\n\t\t<Pagination\n\t\t\ttotalPages={totalPages}\n\t\t\tcurrentPage={currentPage}\n\t\t\tonCurrentPageSet={setCurrentPage}\n\t\t/>\n\t);\n};\n\nconst mapStateToProps = ({ tests }) => ({\n\ttotalPages: tests.totalPages,\n\tcurrentPage: tests.currentPage,\n});\n\nexport default connect(mapStateToProps, { setCurrentPage })(\n\tPaginationContainer,\n);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TestTableContainer from '@components/TestTable';\nimport InputGroup from '@components/InputGroup';\nimport PropTypes from 'prop-types';\nimport Pagination from '../../Pagination';\n\nconst HomePage = ({\n\tonSignOut,\n\tonRequestAddTest,\n\tisAdmin,\n\tonSortTypeSet,\n\tsortType,\n}) => {\n\tconst [isNewTest, setIsNewTest] = useState(false);\n\n\tconst handleNewTestShow = () => {\n\t\tsetIsNewTest(true);\n\t};\n\n\tconst handleNewTestHide = () => {\n\t\tsetIsNewTest(false);\n\t};\n\n\tconst handleTestsSort = () => {\n\t\tsortType === 'created_at_desc'\n\t\t\t? onSortTypeSet('created_at_asc')\n\t\t\t: onSortTypeSet('created_at_desc');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tclassName=\"d-flex  flex-md-row  p-3 px-md-4 mb-3\n     border-bottom\"\n\t\t\t>\n\t\t\t\t<h2 className=\"my-0 mr-md-auto font-weight-normal\">Tests</h2>\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"btn btn-primary ml-auto\"\n\t\t\t\t\tto=\"/login\"\n\t\t\t\t\tonClick={onSignOut}\n\t\t\t\t>\n\t\t\t\t\tLog Out\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<InputGroup\n\t\t\t\ttitle=\"Filter\"\n\t\t\t\tbtnTitle1=\"Sort by date\"\n\t\t\t\tbtnTitle2=\"New Test\"\n\t\t\t\tfuncBtn1={handleTestsSort}\n\t\t\t\tfuncBtn2={handleNewTestShow}\n\t\t\t\tisAdmin={isAdmin}\n\t\t\t/>\n\t\t\t{isNewTest && (\n\t\t\t\t<InputGroup\n\t\t\t\t\ttitle=\"Test title\"\n\t\t\t\t\tbtnTitle1=\"Cansel\"\n\t\t\t\t\tbtnTitle2=\"Create\"\n\t\t\t\t\tfuncBtn1={handleNewTestHide}\n\t\t\t\t\tfuncBtn2={onRequestAddTest}\n\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Pagination />\n\t\t\t<TestTableContainer />\n\t\t</div>\n\t);\n};\n\nHomePage.propTypes = {\n\tonSignOut: PropTypes.func,\n\tonRequestAddTest: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tonSortTypeSet: PropTypes.func,\n\tsortType: PropTypes.string,\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signOut, requestAddTest, setSortType } from '@models/actions';\nimport HomePage from './HomePage';\nimport PropTypes from 'prop-types';\n\nconst HomePageContainer = ({\n\tsignOut,\n\trequestAddTest,\n\tisAdmin,\n\tsetSortType,\n\tsortType,\n}) => (\n\t<HomePage\n\t\tonSignOut={signOut}\n\t\tonRequestAddTest={requestAddTest}\n\t\tisAdmin={isAdmin}\n\t\tonSortTypeSet={setSortType}\n\t\tsortType={sortType}\n\t/>\n);\n\nHomePageContainer.propTypes = {\n\tsignOut: PropTypes.func,\n\trequestAddTest: PropTypes.func,\n\tisAdmin: PropTypes.bool,\n\tsetSortType: PropTypes.func,\n\tsortType: PropTypes.string,\n};\n\nconst mapStateToProps = ({ user, tests }) => ({\n\tisAdmin: user?.is_admin,\n\tsortType: tests.sortType,\n});\n\nconst actions = { signOut, requestAddTest, setSortType };\n\nexport default connect(mapStateToProps, actions)(HomePageContainer);\n","import React, { useEffect, useRef } from 'react';\nimport { keyCodeEsc } from '@constants';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ text, onModalConfirm, onModalHide, singleBtnText }) => {\n\tuseEffect(() => {\n\t\tmodal.current.focus();\n\t\tdocument.body.classList.add(styles.lock);\n\t\treturn () => document.body.classList.remove(styles.lock);\n\t});\n\n\tconst modal = useRef();\n\n\tconst handleModalConfirm = () => {\n\t\tonModalConfirm();\n\t\tonModalHide();\n\t};\n\n\tconst handleModalCansel = () => {\n\t\tonModalHide();\n\t};\n\n\tconst handleModalClick = (evt) => {\n\t\tevt.target.classList.contains('modal') && onModalHide();\n\t};\n\n\tconst handleModalKeyDown = (evt) => {\n\t\tevt.keyCode === keyCodeEsc && onModalHide();\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`modal ${styles.root}`}\n\t\t\ttabIndex=\"-1\"\n\t\t\tref={modal}\n\t\t\tonClick={handleModalClick}\n\t\t\tonKeyDown={handleModalKeyDown}\n\t\t>\n\t\t\t<div className=\"modal-dialog\">\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"close mt-2\"\n\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\tonClick={handleModalCansel}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t<p>{text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t{!singleBtnText && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\t\t\tonClick={handleModalCansel}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCansel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={handleModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{singleBtnText ? `${singleBtnText}` : 'Confirm'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nModal.propTypes = {\n\ttext: PropTypes.string,\n\tonModalConfirm: PropTypes.func,\n\tonModalHide: PropTypes.func,\n\tsingleBtnText: PropTypes.string,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { hideModal } from '@models/actions';\nimport Modal from './Modal';\nimport PropTypes from 'prop-types';\n\nconst ModalContainer = ({ modal, hideModal }) => {\n\tif (!modal) {\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\ttext={modal.text}\n\t\t\tonModalConfirm={modal.func}\n\t\t\tonModalHide={hideModal}\n\t\t\tsingleBtnText={modal.singleBtnText}\n\t\t/>\n\t);\n};\n\nModalContainer.propTypes = {\n\tmodal: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n\thideModal: PropTypes.func,\n};\n\nconst mapStateToProps = ({ modal }) => ({ modal });\n\nexport default connect(mapStateToProps, { hideModal })(ModalContainer);\n","import React from 'react';\nimport { MODAL_MESSAGES } from '@constants';\nimport PropTypes from 'prop-types';\n\nconst QuestionItem = ({\n\ttitle,\n\tonSetTypeQuestion,\n\ttypeQuestion,\n\tonSetQuestion,\n\tonRequestDeleteQuestion,\n\tonModalShow,\n}) => {\n\tconst handleBtnEditClick = () => {\n\t\tonSetTypeQuestion(typeQuestion);\n\t\tonSetQuestion();\n\t};\n\n\tconst handleBtnDeleteClick = () =>\n\t\tonModalShow(MODAL_MESSAGES.DELETE_QUESTION, onRequestDeleteQuestion);\n\n\treturn (\n\t\t<div className=\"d-flex align-items-center\">\n\t\t\t<span className=\"flex-fill pr-1\">{title}</span>\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right mr-3\"\n\t\t\t\tonClick={handleBtnEditClick}\n\t\t\t>\n\t\t\t\t<i className=\"bi bi-pencil-square\" />\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\tonClick={handleBtnDeleteClick}\n\t\t\t>\n\t\t\t\t<i className=\"bi bi-x-square\"></i>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nQuestionItem.propTypes = {\n\ttitle: PropTypes.string,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\tonRequestDeleteQuestion: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default QuestionItem;\n","import React from 'react';\nimport QuestionItem from './QuestionItem/QuestionItem';\nimport PropTypes from 'prop-types';\n\nconst QuestionList = ({\n\tquestions,\n\tonSetTypeQuestion,\n\tonSetQuestion,\n\tonRequestDeleteQuestion,\n\tonModalShow,\n}) => {\n\tconst wrapperSetQuestion = (question) => () => onSetQuestion(question);\n\tconst wrappeRequestDeleteQuestion = (id) => () => onRequestDeleteQuestion(id);\n\n\treturn (\n\t\t<>\n\t\t\t<h5>Questions:</h5>\n\t\t\t<ol className=\"container pr-0\">\n\t\t\t\t{questions.map((it) => (\n\t\t\t\t\t<li className=\"alert alert-light\" key={it.id}>\n\t\t\t\t\t\t<QuestionItem\n\t\t\t\t\t\t\ttitle={it.title}\n\t\t\t\t\t\t\ttypeQuestion={it.question_type}\n\t\t\t\t\t\t\tonSetTypeQuestion={onSetTypeQuestion}\n\t\t\t\t\t\t\tonSetQuestion={wrapperSetQuestion(it)}\n\t\t\t\t\t\t\tonRequestDeleteQuestion={wrappeRequestDeleteQuestion(it.id)}\n\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nQuestionList.propTypes = {\n\tquestions: PropTypes.array,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\tonRequestDeleteQuestion: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default QuestionList;\n","import React from 'react';\nimport QuestionList from './QuestionList';\nimport { connect } from 'react-redux';\nimport { requestDeleteQuestion, showModal } from '@models/actions';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst QuestionListContainer = (props) => {\n\tconst location = useLocation();\n\tconst testId = location.pathname.replace(/\\/management\\//, '');\n\n\tconst onRequestDeleteQuestion = (questionId) => {\n\t\tprops.requestDeleteQuestion(testId, questionId);\n\t\tprops.onSetTypeQuestion('');\n\t};\n\n\treturn (\n\t\t<QuestionList\n\t\t\tquestions={props.questions}\n\t\t\tonSetTypeQuestion={props.onSetTypeQuestion}\n\t\t\tonSetQuestion={props.onSetQuestion}\n\t\t\tonRequestDeleteQuestion={onRequestDeleteQuestion}\n\t\t\tonModalShow={props.showModal}\n\t\t/>\n\t);\n};\n\nQuestionList.propTypes = {\n\tquestions: PropTypes.array,\n\tonSetTypeQuestion: PropTypes.func,\n\tonSetQuestion: PropTypes.func,\n\trequestDeleteQuestion: PropTypes.func,\n\tshowModal: PropTypes.func,\n};\n\nconst actions = { requestDeleteQuestion, showModal };\n\nexport default connect(null, actions)(QuestionListContainer);\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Dropdown.module.scss';\n\nconst Dropdown = ({ onSetTypeQuestion, typeQuestion }) => {\n\tuseEffect(\n\t\t() =>\n\t\t\t!typeQuestion\n\t\t\t\t? dropBtn.current.classList.remove(`${disabled}`)\n\t\t\t\t: dropBtn.current.classList.add(`${disabled}`),\n\t\t[typeQuestion],\n\t);\n\n\tconst { dropdown, show, disabled } = styles;\n\tconst dropElem = useRef();\n\tconst dropBtn = useRef();\n\n\tconst handleTypeBtnClick = (evt) => onSetTypeQuestion(evt.target.textContent);\n\n\tconst handleDropBtnClick = (evt) => {\n\t\tdropElem.current.classList.toggle(`${show}`);\n\t\tdropElem.current.focus();\n\t};\n\n\treturn (\n\t\t<div className=\"position-relative d-inline-block mb-3 mt-1\">\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\tref={dropBtn}\n\t\t\t\tonClick={handleDropBtnClick}\n\t\t\t>\n\t\t\t\tAdd question\n\t\t\t\t<i className=\"bi bi-caret-down-fill ml-3\"></i>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tid=\"myDropdown\"\n\t\t\t\tclassName={dropdown}\n\t\t\t\tref={dropElem}\n\t\t\t\ttabIndex=\"-1\"\n\t\t\t\tonClick={handleDropBtnClick}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tsingle\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light mt-0\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tmultiple\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"typeSelect btn btn-block btn-light mt-0\"\n\t\t\t\t\tonClick={handleTypeBtnClick}\n\t\t\t\t>\n\t\t\t\t\tnumber\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDropdown.propTypes = {\n\tonSetTypeQuestion: PropTypes.func,\n\ttypeQuestion: PropTypes.string,\n};\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport styles from './FormAnswer.module.scss';\nimport classnames from 'classnames';\nimport { MODAL_MESSAGES } from '@constants';\nimport PropTypes from 'prop-types';\n\nconst FormAnswer = ({\n\tanswer,\n\ttypeQuestion,\n\terror = null,\n\tonModalShow,\n\tonAnswerDelete,\n}) => {\n\tconst keyId =\n\t\terror && Object.keys(error).find((it) => it === String(answer.id));\n\n\tconst [value, setValue] = useState(answer?.text || '');\n\tconst [isRight, setIsRight] = useState(answer.is_right || false);\n\n\tconst classInput = classnames('form-control', {\n\t\t'is-invalid': keyId === String(answer.id),\n\t});\n\n\tconst wrapperAnswerDelete = () => onAnswerDelete(answer.id);\n\tconst handleInputChange = (evt) => setValue(evt.target.value);\n\tconst handleCheckboxChange = () => setIsRight((state) => !state);\n\tconst handleDeleteClick = () =>\n\t\tonModalShow(MODAL_MESSAGES.DELETE_ANSWER, wrapperAnswerDelete);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"input-group-prepend shadow-sm\">\n\t\t\t\t<input\n\t\t\t\t\ttype={typeQuestion === 'number' ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdata-id={answer.id}\n\t\t\t\t\taria-label=\"Field for an answer\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"input-group-text\"\n\t\t\t\t\thidden={typeQuestion === 'number' && true}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"checkbox\"\n\t\t\t\t\t\taria-label=\"Checkbox for right answer\"\n\t\t\t\t\t\tchecked={typeQuestion === 'number' ? true : isRight}\n\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{typeQuestion !== 'number' && (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttitle=\"Delete answer\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={styles.btn}\n\t\t\t\t\t\tonClick={handleDeleteClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t&#65794;\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{keyId === String(answer.id) && (\n\t\t\t\t<div className=\"invalid-feedback d-block\">{error[keyId]}</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nFormAnswer.propTypes = {\n\tanswer: PropTypes.object,\n\terror: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonAnswerDelete: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default FormAnswer;\n","import { ERROR_TEXTS } from '@constants';\n\nconst { REQUIRED, INDICATE_ANSWER, TWO_ANSWER, ONE_RIGHT_ANSWER } = ERROR_TEXTS;\n\nexport const validate = (fields) => {\n\tconst errors = {};\n\tif (!fields.title) {\n\t\terrors.question = REQUIRED;\n\t}\n\n\tif (fields.question_type !== 'number') {\n\t\tif (fields.answers) {\n\t\t\tif (fields.question_type === 'single') {\n\t\t\t\tif (fields.answers.filter((it) => it.is_right === true).length > 1) {\n\t\t\t\t\terrors.answersGeneral = ONE_RIGHT_ANSWER;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fields.answers.filter((it) => it.is_right === true).length) {\n\t\t\t\terrors.answersGeneral = INDICATE_ANSWER;\n\t\t\t}\n\n\t\t\tif (fields.answers.length < 2) {\n\t\t\t\terrors.answersGeneral = TWO_ANSWER;\n\t\t\t}\n\n\t\t\tfields.answers.forEach((it) => {\n\t\t\t\tif (!it.text) {\n\t\t\t\t\terrors.answersInputs = {\n\t\t\t\t\t\t...errors.answersInputs,\n\t\t\t\t\t\t[it.id]: REQUIRED,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\terrors.answersGeneral = TWO_ANSWER;\n\t\t}\n\t}\n\n\tif (fields.question_type === 'number') {\n\t\tif (fields.answers) {\n\t\t\tfields.answers.forEach((it) => {\n\t\t\t\tif (!it.text) {\n\t\t\t\t\terrors.answersInputs = {\n\t\t\t\t\t\t...errors.answersInputs,\n\t\t\t\t\t\t[it.id]: REQUIRED,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\terrors.answersGeneral = ONE_RIGHT_ANSWER;\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import React, { useState, useEffect } from 'react';\nimport FormAnswer from './FormAnswer/FormAnswer';\nimport classnames from 'classnames';\nimport { validate } from './validate';\nimport { QUESTION_FORM } from '@constants';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { usePrevious } from '@utils/customHooks';\nimport styles from './FormQuestion.module.scss';\nimport PropTypes from 'prop-types';\n\nconst FormQuestion = ({\n\tonSetTypeQuestion,\n\ttypeQuestion,\n\tquestion,\n\tonRequestCreateQuestion,\n\tonRequestUpdateQuestion,\n\tonRequestMoveAnswer,\n\tonModalShow,\n}) => {\n\tuseEffect(() => shouldUpdate());\n\n\tconst [errors, setErrors] = useState(null);\n\tconst [value, setValue] = useState(question?.title || '');\n\tconst [newAnswers, setNewAnswers] = useState(question?.answers || []);\n\tconst prevQuestion = usePrevious(question);\n\n\tconst shouldUpdate = () => {\n\t\tif (\n\t\t\tquestion !== prevQuestion &&\n\t\t\tquestion &&\n\t\t\tnewAnswers !== question?.answers\n\t\t) {\n\t\t\tsetNewAnswers(question?.answers);\n\t\t\tsetValue(question?.title);\n\t\t}\n\t};\n\n\tconst { answerList, selected } = styles;\n\n\tconst classInput = classnames('form-control', 'rounded', 'shadow-sm', {\n\t\t'is-invalid': errors?.question,\n\t});\n\n\tconst getFormData = () => {\n\t\tconst form = document.forms[QUESTION_FORM];\n\t\tif (!form['input']) {\n\t\t\treturn {\n\t\t\t\ttitle: value,\n\t\t\t\tquestion_type: typeQuestion,\n\t\t\t};\n\t\t}\n\n\t\tconst inputsValues = form['input'].length\n\t\t\t? Array.from(form['input']).map((it) => ({\n\t\t\t\t\tid: it.dataset.id,\n\t\t\t\t\ttext: it.value,\n\t\t\t  }))\n\t\t\t: [{ id: form['input'].dataset.id, text: form['input'].value }];\n\n\t\tconst checkboxValues = form['checkbox']?.length\n\t\t\t? Array.from(form['checkbox']).map((it) => it.checked)\n\t\t\t: [form['checkbox']?.checked];\n\n\t\tconst answers = inputsValues.map((it, idx) => ({\n\t\t\t...it,\n\t\t\tis_right: checkboxValues[idx],\n\t\t}));\n\n\t\treturn {\n\t\t\ttitle: value,\n\t\t\tanswers,\n\t\t\tquestion_type: typeQuestion,\n\t\t};\n\t};\n\n\tconst updateQuestion = (data) => {\n\t\tconst { title, answers, question_type } = data;\n\t\tconst checkedAnswers = checkAnswers(answers, question.answers);\n\t\tconst updatingQuestion = {\n\t\t\ttitle,\n\t\t\tquestion_type,\n\t\t\tanswer: answers.length,\n\t\t};\n\t\tonRequestUpdateQuestion({\n\t\t\tupdatingQuestion,\n\t\t\tcheckedAnswers,\n\t\t\tquetionId: question.id,\n\t\t});\n\t};\n\n\tconst checkAnswers = (currentAnswers, oldAnswers) => {\n\t\tconst patchAnswers = currentAnswers.filter((it) =>\n\t\t\toldAnswers.some((el) => el.id === +it.id),\n\t\t);\n\n\t\tconst postAnswers = currentAnswers.filter(\n\t\t\t(it) => !oldAnswers.some((el) => el.id === +it.id),\n\t\t);\n\n\t\tconst deleteAnswers = oldAnswers.filter((it) =>\n\t\t\tcurrentAnswers.every((el) => el.id != it.id),\n\t\t);\n\n\t\treturn { patchAnswers, postAnswers, deleteAnswers };\n\t};\n\n\tconst validateData = (data) => {\n\t\tconst errors = validate(data);\n\t\tsetErrors(errors);\n\t\treturn errors;\n\t};\n\n\tconst handleSaveClick = () => {\n\t\tconst data = getFormData();\n\t\tconst errors = validateData(data);\n\n\t\tif (Object.keys(errors).length === 0) {\n\t\t\tif (question) {\n\t\t\t\tupdateQuestion(data);\n\t\t\t} else {\n\t\t\t\tonRequestCreateQuestion(data);\n\t\t\t}\n\t\t\tonSetTypeQuestion('');\n\t\t}\n\t};\n\n\tconst handleCanselClick = () => onSetTypeQuestion('');\n\tconst handleAnswerDelete = (id) => {\n\t\tsetNewAnswers((state) => state.filter((it) => it.id != id));\n\t};\n\n\tconst handleAnswerAdd = () => {\n\t\tconst answer = { text: '', is_right: false, id: newAnswers.length };\n\t\tsetNewAnswers((state) => [...state, answer]);\n\t};\n\n\tconst handleInputChange = (evt) => setValue(evt.target.value);\n\n\tconst reorder = (list, startIndex, endIndex) => {\n\t\tconst result = Array.from(list);\n\t\tconst [removed] = result.splice(startIndex, 1);\n\t\tresult.splice(endIndex, 0, removed);\n\n\t\treturn result;\n\t};\n\n\tconst handleDragEnd = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = reorder(\n\t\t\tnewAnswers,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index,\n\t\t);\n\n\t\tonRequestMoveAnswer(result.draggableId, result.destination.index);\n\n\t\tsetNewAnswers(items);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"bg-white container pt-2 pb-3 rounded-lg shadow\"\n\t\t\tname={QUESTION_FORM}\n\t\t>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<h5 className=\"d-inline-block\">\n\t\t\t\t\t<label>Question:</label>\n\t\t\t\t</h5>\n\t\t\t\t<span className=\"float-right\">Type:{typeQuestion}</span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={classInput}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\taria-label=\"Field for the question\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t{errors?.question && (\n\t\t\t\t\t<div className=\"invalid-feedback\">{errors.question}</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<h5>Answers:</h5>\n\t\t\t<DragDropContext onDragEnd={handleDragEnd}>\n\t\t\t\t<Droppable droppableId=\"droppable\">\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tclassName={answerList}\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{newAnswers.map((it, idx) => (\n\t\t\t\t\t\t\t\t<Draggable key={it.id} draggableId={String(it.id)} index={idx}>\n\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tclassName={`p-1 ${snapshot.isDragging && selected}`}\n\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FormAnswer\n\t\t\t\t\t\t\t\t\t\t\t\tanswer={it}\n\t\t\t\t\t\t\t\t\t\t\t\ttypeQuestion={typeQuestion}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors?.answersInputs}\n\t\t\t\t\t\t\t\t\t\t\t\tonModalShow={onModalShow}\n\t\t\t\t\t\t\t\t\t\t\t\tonAnswerDelete={handleAnswerDelete}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n\t\t\t{!(typeQuestion === 'number' && newAnswers.length >= 1) && (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary float-right\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Add answer\"\n\t\t\t\t\tonClick={handleAnswerAdd}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"bi bi-plus-circle\" />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={handleCanselClick}\n\t\t\t\t>\n\t\t\t\t\tCansel\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={handleSaveClick}\n\t\t\t\t>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{errors?.answersGeneral && (\n\t\t\t\t<div className=\"invalid-feedback d-block\">{errors.answersGeneral}</div>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nFormQuestion.propTypes = {\n\tquestion: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\tonRequestCreateQuestion: PropTypes.func,\n\tonRequestUpdateQuestion: PropTypes.func,\n\tonRequestMoveAnswer: PropTypes.func,\n\tonModalShow: PropTypes.func,\n};\n\nexport default FormQuestion;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious(value) {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t\tref.current = value;\n\t});\n\treturn ref.current;\n}\n","import React from 'react';\nimport FormQuestion from './FormQuestion';\nimport { connect } from 'react-redux';\nimport {\n\trequestCreateQuestion,\n\trequestUpdateQuestion,\n\trequestMoveAnswer,\n\tshowModal,\n} from '@models/actions';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst FormQuestionContainer = (props) => {\n\tconst location = useLocation();\n\tconst testId = location.pathname.replace(/\\/management\\//, '');\n\n\tconst onRequestCreateQuestion = (data) =>\n\t\tprops.requestCreateQuestion(testId, data);\n\n\tconst onRequestUpdateQuestion = (data) =>\n\t\tprops.requestUpdateQuestion(testId, data);\n\n\treturn (\n\t\t<FormQuestion\n\t\t\tonSetTypeQuestion={props.onSetTypeQuestion}\n\t\t\ttypeQuestion={props.typeQuestion}\n\t\t\tquestion={props.question}\n\t\t\tonRequestCreateQuestion={onRequestCreateQuestion}\n\t\t\tonRequestUpdateQuestion={onRequestUpdateQuestion}\n\t\t\tonRequestMoveAnswer={props.requestMoveAnswer}\n\t\t\tonModalShow={props.showModal}\n\t\t/>\n\t);\n};\n\nFormQuestionContainer.propTypes = {\n\tquestion: PropTypes.object || null,\n\ttypeQuestion: PropTypes.string,\n\tonSetTypeQuestion: PropTypes.func,\n\trequestCreateQuestion: PropTypes.func,\n\trequestUpdateQuestion: PropTypes.func,\n\trequestMoveAnswer: PropTypes.func,\n\tshowModal: PropTypes.func,\n};\n\nconst actions = {\n\trequestCreateQuestion,\n\trequestUpdateQuestion,\n\trequestMoveAnswer,\n\tshowModal,\n};\n\nexport default connect(null, actions)(FormQuestionContainer);\n","import React, { useState, useEffect } from 'react';\nimport QuestionList from './QuestionList';\nimport Dropdown from './Dropdown';\nimport FormQuestion from './FormQuestion';\nimport { Link, useHistory } from 'react-router-dom';\nimport { MODAL_MESSAGES } from '@constants';\nimport PropTypes from 'prop-types';\n\nconst TestManagement = ({\n\ttest,\n\tonModalShow,\n\tonRequestDeleteTest,\n\tonRequestEditTest,\n}) => {\n\tconst [value, setValue] = useState(test?.title || '');\n\tconst [question, setQuestion] = useState(null);\n\tconst [typeQuestion, setTypeQuestion] = useState('');\n\tconst history = useHistory();\n\n\tconst { DELETE_TEST, SAVE_TEST } = MODAL_MESSAGES;\n\n\tuseEffect(() => question && !typeQuestion && setQuestion(null), [\n\t\ttypeQuestion,\n\t]);\n\n\tconst handleInputChange = (evt) => {\n\t\tsetValue(evt.target.value);\n\t};\n\n\tconst handleTestDelete = () => {\n\t\tonRequestDeleteTest(test.id, history);\n\t};\n\n\tconst handleTestSave = () => {\n\t\tonRequestEditTest(test.id, value, history);\n\t};\n\n\tconst handleBtnSaveClick = () => onModalShow(SAVE_TEST, handleTestSave);\n\n\tconst handleBtnDeleteClick = () => onModalShow(DELETE_TEST, handleTestDelete);\n\n\treturn (\n\t\t<div>\n\t\t\t<h4 className=\"input-group align-items-baseline mb-3\">\n\t\t\t\t<label>Test :</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control ml-2 rounded shadow-sm\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t</h4>\n\t\t\t<div className=\"btn-group mb-3\">\n\t\t\t\t<button className=\"btn btn-secondary\" onClick={handleBtnDeleteClick}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\n\t\t\t\t<button className=\"btn btn-primary\" onClick={handleBtnSaveClick}>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Link to=\"/tests\" className=\"btn btn-primary mb-3 float-right\">\n\t\t\t\tTo home\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<QuestionList\n\t\t\t\t\tquestions={test?.questions || []}\n\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\tonSetQuestion={setQuestion}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\ttypeQuestion={typeQuestion}\n\t\t\t\t/>\n\t\t\t\t{typeQuestion && (\n\t\t\t\t\t<FormQuestion\n\t\t\t\t\t\tonSetTypeQuestion={setTypeQuestion}\n\t\t\t\t\t\ttypeQuestion={typeQuestion || null}\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nTestManagement.propTypes = {\n\ttest: PropTypes.object || null,\n\tonModalShow: PropTypes.func,\n\tonRequestDeleteTest: PropTypes.func,\n\tonRequestEditTest: PropTypes.func,\n};\n\nexport default TestManagement;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TestManagement from './TestManagement';\nimport { requestDeleteTest, showModal, requestEditTest } from '@models/actions';\nimport PropTypes from 'prop-types';\n\nconst TestManagementContainer = ({\n\ttests,\n\tid,\n\tshowModal,\n\trequestDeleteTest,\n\trequestEditTest,\n}) => {\n\tconst test = tests.find((it) => it.id === +id) || null;\n\n\treturn (\n\t\t<div className=\"pt-4 pb-4\">\n\t\t\t<TestManagement\n\t\t\t\ttest={test}\n\t\t\t\tonModalShow={showModal}\n\t\t\t\tonRequestDeleteTest={requestDeleteTest}\n\t\t\t\tonRequestEditTest={requestEditTest}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nTestManagementContainer.propTypes = {\n\ttests: PropTypes.array,\n\tid: PropTypes.string,\n\tshowModal: PropTypes.func,\n\trequestDeleteTest: PropTypes.func,\n\trequestEditTest: PropTypes.func,\n};\n\nconst actions = { showModal, requestDeleteTest, requestEditTest };\n\nconst mapStateToProps = ({ tests }) => ({ tests: tests.tests });\n\nexport default connect(mapStateToProps, actions)(TestManagementContainer);\n","import React from 'react';\nimport TestManagementContainer from '@components/TestManagement';\nimport PropTypes from 'prop-types';\n\nconst ManagementPage = ({ id }) => {\n\treturn <TestManagementContainer id={id} />;\n};\n\nManagementPage.propTypes = {\n\tid: PropTypes.string,\n};\n\nexport default ManagementPage;\n","import React from 'react';\n\nimport './ErrorIndicator.scss';\n\nconst ErrorIndicator = ({ text }) => {\n\treturn (\n\t\t<div className=\"error-indicator\">\n\t\t\t<span>{text}</span>\n\t\t</div>\n\t);\n};\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropsTypes from 'prop-types';\n\nconst QuestionItem = ({ question, count, idx }) => {\n\tconst { title, question_type: type, answers, id } = question;\n\n\tconst classContainer = classnames({\n\t\t'custom-control': type !== 'number',\n\t\t'custom-checkbox': type === 'multiple',\n\t\t'custom-radio': type === 'single',\n\t});\n\n\tconst classInput = classnames({\n\t\t'custom-control-input': type !== 'number',\n\t\t'form-control': type === 'number',\n\t});\n\n\tconst classItem = classnames('carousel-item', 'mb-3', {\n\t\tactive: count === idx + 1,\n\t});\n\n\tconst choiceType = (key) => {\n\t\tswitch (key) {\n\t\t\tcase 'single':\n\t\t\t\treturn 'radio';\n\t\t\tcase 'multiple':\n\t\t\t\treturn 'checkbox';\n\t\t\tcase 'number':\n\t\t\t\treturn 'number';\n\n\t\t\tdefault:\n\t\t\t\tconsole.wrang('Неверное значение question_type');\n\t\t}\n\t};\n\n\treturn (\n\t\t<li className={classItem}>\n\t\t\t<h5>{title}</h5>\n\t\t\t<form>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t{answers.map((it) => (\n\t\t\t\t\t\t<li className=\"list-group-item\" key={it.id}>\n\t\t\t\t\t\t\t<div className={classContainer}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid={it.id}\n\t\t\t\t\t\t\t\t\tclassName={classInput}\n\t\t\t\t\t\t\t\t\ttype={choiceType(type)}\n\t\t\t\t\t\t\t\t\tname={String(id)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{type !== 'number' && (\n\t\t\t\t\t\t\t\t\t<label className=\"custom-control-label\" htmlFor={it.id}>\n\t\t\t\t\t\t\t\t\t\t{it.text}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t</li>\n\t);\n};\n\nQuestionItem.propTypes = {\n\tquestions: PropsTypes.array,\n\tcount: PropsTypes.number,\n\tidx: PropsTypes.number,\n};\n\nexport default QuestionItem;\n","import React from 'react';\nimport QuestionItem from './QuestionItem';\nimport PropsTypes from 'prop-types';\n\nconst QuestionList = ({ questions, count }) => {\n\treturn (\n\t\t<div className=\"carousel slide mt-1\">\n\t\t\t<ul className=\"list-unstyled carousel-inner\">\n\t\t\t\t{questions.map((it, idx) => (\n\t\t\t\t\t<QuestionItem question={it} key={it.id} count={count} idx={idx} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nQuestionList.propTypes = {\n\tquestions: PropsTypes.array,\n\tcount: PropsTypes.number,\n};\n\nexport default QuestionList;\n","import React, { useState } from 'react';\nimport QuestionList from './QuestionList/QuestionList';\nimport PropsTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst TestDoing = ({ questions, title, onModalShow }) => {\n\tconst [count, setCount] = useState(questions.length ? 1 : 0);\n\tconst history = useHistory();\n\n\tconst handlerNextClick = () => {\n\t\tsetCount(count + 1);\n\t};\n\n\tconst handlerPrevClick = () => {\n\t\tsetCount(count - 1);\n\t};\n\n\tconst handleRouteChange = () => history.push('/tests');\n\n\tconst handleFinishBtnClick = () => {\n\t\tconst answers = getAnswers();\n\t\tconst rightAnswers = checkAnswers(answers);\n\t\tonModalShow(\n\t\t\t`${rightAnswers.length} right answer(s) from ${questions.length} questions`,\n\t\t\thandleRouteChange,\n\t\t\t'To home',\n\t\t);\n\t};\n\n\tconst getAnswers = () => {\n\t\tconst elements = Array.from(document.querySelectorAll('form'));\n\n\t\treturn elements.map((it) => ({\n\t\t\tid: it.name,\n\t\t\tanswers: Array.from(it.elements).map((it) => ({\n\t\t\t\tid: it.id,\n\t\t\t\tvalue: it.type === 'number' ? it.value : it.checked,\n\t\t\t})),\n\t\t}));\n\t};\n\n\tconst checkAnswers = (userAnswers) => {\n\t\tlet rightAnswers = [];\n\t\tfor (let i = 0; i < userAnswers.length; i++) {\n\t\t\tconst rightAnswer = userAnswers[i].answers.every((it, idx) => {\n\t\t\t\tif (questions[i].question_type === 'number') {\n\t\t\t\t\treturn it.value === questions[i].answers[idx].text;\n\t\t\t\t} else {\n\t\t\t\t\treturn it.value === questions[i].answers[idx].is_right;\n\t\t\t\t}\n\t\t\t});\n\t\t\trightAnswer && rightAnswers.push(questions[i].id);\n\t\t}\n\n\t\treturn rightAnswers;\n\t};\n\n\tconst handleHomeBtnClick = () => history.push('/tests');\n\n\treturn (\n\t\t<div className=\"mt-3\">\n\t\t\t<h4>{title}</h4>\n\t\t\t{questions.length ? (\n\t\t\t\t<>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{count}/{questions.length}\n\t\t\t\t\t</span>\n\t\t\t\t\t<QuestionList questions={questions} count={count} />\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={handlerPrevClick}\n\t\t\t\t\t\t\tdisabled={count < 2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPrev\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={handlerNextClick}\n\t\t\t\t\t\t\tdisabled={count === questions.length}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary float-right\"\n\t\t\t\t\t\tonClick={handleFinishBtnClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tFinish test\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t<span>Test does not have quetions</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-sm btn-primary ml-auto\"\n\t\t\t\t\t\tonClick={handleHomeBtnClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tTo home\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nTestDoing.propTypes = {\n\tquestions: PropsTypes.array,\n\ttitle: PropsTypes.string,\n\tonModalShow: PropsTypes.func,\n};\n\nexport default TestDoing;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TestDoing from './TestDoing';\nimport { showModal } from '@models/actions';\nimport NotFoundPage from '@components/pages/NotFoundPage';\nimport PropTypes from 'prop-types';\n\nconst TestDoingContainer = ({ tests, id, showModal }) => {\n\tconst test = tests.find((it) => it.id == id);\n\n\tif (!test) {\n\t\treturn <NotFoundPage />;\n\t}\n\n\treturn (\n\t\t<TestDoing\n\t\t\tquestions={test.questions}\n\t\t\ttitle={test.title}\n\t\t\tonModalShow={showModal}\n\t\t/>\n\t);\n};\n\nTestDoingContainer.propTypes = {\n\ttests: PropTypes.array,\n\tshowModal: PropTypes.func,\n};\n\nconst mapStateToProps = ({ tests }) => ({ tests: tests.tests });\n\nexport default connect(mapStateToProps, { showModal })(TestDoingContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TestDoing from '@components/TestDoing';\n\nconst TestPage = ({ id }) => {\n\treturn <TestDoing id={id} />;\n};\n\nTestPage.propTypes = {\n\tid: PropTypes.string,\n};\n\nexport default TestPage;\n","import React from 'react';\n\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch,\n} from 'react-router-dom';\nimport LoginPage from '@components/pages/LoginPage';\nimport NotFoundPage from '@components/pages/NotFoundPage';\nimport HomePage from '@components/pages/HomePage';\nimport ModalContainer from '@components/Modal';\nimport ManagementPage from '@components/pages/ManagementPage';\nimport ErrorIndicator from '@components/ErrorIndicator';\nimport TestPage from '@components/pages/TestPage';\n\nconst App = ({ user, error }) => {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"container\">\n\t\t\t\t{error && <ErrorIndicator text={error} />}\n\t\t\t\t<ModalContainer />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\tuser ? <Redirect to=\"/tests\" /> : <Redirect to=\"/login\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\trender={() => (user ? <Redirect to=\"/tests\" /> : <LoginPage />)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/tests\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\trender={() => (user ? <HomePage /> : <Redirect to=\"/login\" />)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/tests/:id\"\n\t\t\t\t\t\trender={({ match }) => <TestPage id={match?.params.id} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/management/:id\"\n\t\t\t\t\t\trender={({ match }) => <ManagementPage id={match?.params.id} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route component={NotFoundPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport App from './App';\nimport PropTypes from 'prop-types';\n\nclass AppContainer extends PureComponent {\n\trender() {\n\t\tconst { user, error } = this.props;\n\t\treturn <App user={user} error={error} />;\n\t}\n}\n\nAppContainer.propTypes = {\n\tuser: PropTypes.object,\n\terror: PropTypes.string,\n};\n\nconst mapStateToProps = ({ user, error }) => ({\n\tuser,\n\terror,\n});\n\nexport default connect(mapStateToProps, null)(AppContainer);\n","import { combineReducers } from 'redux';\nimport modal from './modal';\nimport user from './user';\nimport registration from './registration';\nimport error from './error';\nimport tests from './tests';\nimport filter from './filter';\nimport spinner from './spinner';\n\nexport default combineReducers({\n\tmodal,\n\tuser,\n\tregistration,\n\terror,\n\ttests,\n\tfilter,\n\tspinner,\n});\n","import { SHOW_MODAL, HIDE_MODAL } from '@models/actions/actionTypes';\n\nexport default (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase SHOW_MODAL:\n\t\t\treturn { ...action.payload };\n\n\t\tcase HIDE_MODAL:\n\t\t\treturn false;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { FETCH_SIGNIN_SUCCESS, SIGNOUT } from '@models/actions/actionTypes';\n\nexport default (state = null, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SIGNIN_SUCCESS:\n\t\t\treturn { ...action.payload };\n\n\t\tcase SIGNOUT:\n\t\t\treturn null;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { TOGGLE_REGISTRATION } from '@models/actions/actionTypes';\n\nexport default (state = true, action) => {\n\tswitch (action.type) {\n\t\tcase TOGGLE_REGISTRATION:\n\t\t\treturn !state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { HIDE_ERROR, SHOW_ERROR } from '@models/actions/actionTypes';\n\nexport default (state = '', action) => {\n\tswitch (action.type) {\n\t\tcase SHOW_ERROR:\n\t\t\treturn action.payload;\n\n\t\tcase HIDE_ERROR:\n\t\t\treturn null;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import {\n\tFETCH_TESTS_SUCCESS,\n\tADD_TEST,\n\tDELETE_TEST,\n\tADD_QUESTION,\n\tUPDATE_QUESTION,\n\tDELETE_QUESTION,\n\tSET_CURRENT_PAGE,\n\tSET_SORT_TYPE,\n} from '@models/actions/actionTypes';\n\nexport default (\n\tstate = {\n\t\ttests: [],\n\t\ttotalPages: 0,\n\t\ttotalCount: 0,\n\t\tcurrentPage: 1,\n\t\tsortType: 'created_at_desc',\n\t},\n\taction,\n) => {\n\tswitch (action.type) {\n\t\tcase FETCH_TESTS_SUCCESS:\n\t\t\tconst { tests, meta } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: [...tests],\n\t\t\t\ttotalPages: meta.total_pages,\n\t\t\t\ttotalCount: meta.total_count,\n\t\t\t};\n\n\t\tcase SET_CURRENT_PAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.payload,\n\t\t\t};\n\n\t\tcase SET_SORT_TYPE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsortType: action.payload,\n\t\t\t};\n\n\t\tcase ADD_TEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: [...state.tests, action.payload],\n\t\t\t};\n\n\t\tcase DELETE_TEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: state.tests.filter((it) => action.payload !== it.id),\n\t\t\t};\n\n\t\tcase ADD_QUESTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: state.tests.map((it) =>\n\t\t\t\t\tit.id == action.payload.id\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\t\tquestions: [...it.questions, action.payload.data],\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: it,\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase UPDATE_QUESTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: state.tests.map((it) =>\n\t\t\t\t\tit.id == action.payload.id\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\t\tquestions: it.questions.map((it) =>\n\t\t\t\t\t\t\t\t\tit.id == action.payload.data.id ? action.payload.data : it,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: it,\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase DELETE_QUESTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttests: state.tests.map((it) =>\n\t\t\t\t\tit.id == action.payload.testId\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...it,\n\t\t\t\t\t\t\t\tquestions: it.questions.filter(\n\t\t\t\t\t\t\t\t\t(it) => it.id != action.payload.questionId,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: it,\n\t\t\t\t),\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { CHANGE_FILTER } from '@models/actions/actionTypes';\n\nexport default (state = '', action) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_FILTER:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { HIDE_SPINNER, SHOW_SPINNER } from '@models/actions/actionTypes';\n\nexport default (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase SHOW_SPINNER:\n\t\t\treturn true;\n\n\t\tcase HIDE_SPINNER:\n\t\t\treturn false;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import axios from 'axios';\nimport { baseURL, scopeKey } from '@constants';\n\nexport default axios.create({\n\twithCredentials: true,\n\tbaseURL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\t'scope-key': `${scopeKey}`,\n\t},\n\tresponseType: 'json',\n});\n","import axios from '@api/axios';\n\nconst requestFn = (method) => (url, params = {}) => axios[method](url, params);\n\nexport const getRequest = requestFn('get');\nexport const postRequest = requestFn('post');\nexport const deleteRequest = requestFn('delete');\nexport const patchRequest = requestFn('patch');\n","import {\n\tgetRequest,\n\tpostRequest,\n\tdeleteRequest,\n\tpatchRequest,\n} from './request';\n\nexport const fetchSignupUser = (data) => postRequest(`/signup`, data);\nexport const fetchSigninUser = (data) => postRequest(`/signin`, data);\nexport const fetchSignoutUser = () => deleteRequest(`/logout`);\nexport const fetchGetUser = () => getRequest('/users/current');\nexport const fetchCreateTest = (data) => postRequest(`/tests`, data);\nexport const fetchGetTests = (param = '') => getRequest(`/tests${param}`);\nexport const fetchDeleteTest = (id) => deleteRequest(`/tests/${id}`);\nexport const fetchEditTest = (id, data) => patchRequest(`/tests/${id}`, data);\nexport const fetchCreateQuestion = (id, data) =>\n\tpostRequest(`/tests/${id}/questions`, data);\nexport const fetchCreateAnswer = (id, data) =>\n\tpostRequest(`/questions/${id}/answers`, data);\nexport const fetchUpdateQuestion = (id, data) =>\n\tpatchRequest(`/questions/${id}`, data);\nexport const fetchUpdateAnswer = (id, data) =>\n\tpatchRequest(`/answers/${id}`, data);\nexport const fetchMoveAnswer = (id, position) =>\n\tpatchRequest(`/answers/${id}/insert_at/${position}`);\nexport const fetchDeleteQuestion = (id) => deleteRequest(`/questions/${id}`);\nexport const fetchDeleteAnswer = (id) => deleteRequest(`/answers/${id}`);\n","import { put, delay } from 'redux-saga/effects';\nimport { showError, hideError } from '@models/actions';\n\nexport function* showAndHideError(text, error) {\n\tyield put(showError(`${text} ${error}`));\n\tyield delay(7000);\n\tyield put(hideError());\n}\n","import { takeEvery, all, call, put } from 'redux-saga/effects';\nimport {\n\tFETCH_REGISTRATION,\n\tFETCH_SIGNIN,\n\tSIGNOUT,\n} from '@models/actions/actionTypes';\nimport {\n\tfetchSignupUser,\n\tfetchSigninUser,\n\tfetchSignoutUser,\n\tfetchGetUser,\n} from '@api';\nimport { fetchSigninSuccess, toggleRegistration } from '@models/actions';\nimport { showAndHideError } from './error';\n\nfunction* workerFetchRegistration({ payload }) {\n\ttry {\n\t\tyield fetchSignupUser(payload);\n\t\tyield put(toggleRegistration());\n\t} catch (error) {\n\t\tyield showAndHideError('Регистрация не удалась!', error);\n\t}\n}\n\nfunction* workerFetchSignin({ payload }) {\n\ttry {\n\t\tconst { data } = yield fetchSigninUser(payload);\n\t\tyield put(fetchSigninSuccess(data));\n\t\tyield fetchGetUser();\n\t} catch (error) {\n\t\tyield showAndHideError('Авторизация не удалась!', error);\n\t}\n}\n\nfunction* workerFetchSignout() {\n\ttry {\n\t\tyield call(fetchSignoutUser);\n\t} catch (error) {\n\t\tyield console.log(error);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([\n\t\ttakeEvery(FETCH_REGISTRATION, workerFetchRegistration),\n\t\ttakeEvery(FETCH_SIGNIN, workerFetchSignin),\n\t\ttakeEvery(SIGNOUT, workerFetchSignout),\n\t]);\n}\n","import { takeEvery, all, put } from 'redux-saga/effects';\nimport {\n\tfetchGetTests,\n\tfetchCreateTest,\n\tfetchDeleteTest,\n\tfetchEditTest,\n} from '@api';\nimport {\n\tfetchTestsSuccess,\n\taddTest,\n\tdeleteTest,\n\teditTest,\n\tshowSpinner,\n\thideSpinner,\n} from '@models/actions';\nimport {\n\tFETCH_TESTS,\n\tREQUEST_ADD_TEST,\n\tREQUEST_DELETE_TEST,\n\tREQUEST_EDIT_TEST,\n} from '@models/actions/actionTypes';\nimport { showAndHideError } from './error';\n\nfunction* workerFetchGetTests({ payload }) {\n\ttry {\n\t\tyield put(showSpinner());\n\t\tconst { currentPage, sortType, filter } = payload;\n\t\tconst { data } = yield fetchGetTests(\n\t\t\t`?page=${currentPage}&per=8&sort=${sortType}&search=${filter}`,\n\t\t);\n\t\tyield put(fetchTestsSuccess(data));\n\t\tyield put(hideSpinner());\n\t} catch (error) {\n\t\tyield put(hideSpinner());\n\t\tyield showAndHideError(\n\t\t\t'Не удалось выполнить загрузку данных с сервера',\n\t\t\terror,\n\t\t);\n\t}\n}\n\nfunction* workerFetchPostTest({ payload }) {\n\ttry {\n\t\tconst { title, history } = payload;\n\t\tconst { data } = yield fetchCreateTest({ title });\n\t\tyield put(addTest(data));\n\t\tyield history.push(`/management/${data.id}`);\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось загрузить данные на сервер', error);\n\t}\n}\n\nfunction* workerFetchDeleteTest({ payload }) {\n\ttry {\n\t\tconst { id, history } = payload;\n\t\tyield fetchDeleteTest(id);\n\t\tyield put(deleteTest(payload));\n\t\tyield history.push('/tests');\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось удалить тест на сервере', error);\n\t}\n}\n\nfunction* workerFetchEditTest({ payload }) {\n\ttry {\n\t\tconst { id, value, history } = payload;\n\t\tyield fetchEditTest(id, { title: value });\n\t\tyield put(editTest(payload));\n\t\tyield history.push('/tests');\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось внести изменения на сервере', error);\n\t}\n}\n\nexport default function* () {\n\tyield all([\n\t\ttakeEvery(FETCH_TESTS, workerFetchGetTests),\n\t\ttakeEvery(REQUEST_ADD_TEST, workerFetchPostTest),\n\t\ttakeEvery(REQUEST_DELETE_TEST, workerFetchDeleteTest),\n\t\ttakeEvery(REQUEST_EDIT_TEST, workerFetchEditTest),\n\t]);\n}\n","import { takeEvery, all, put } from 'redux-saga/effects';\nimport {\n\tfetchCreateQuestion,\n\tfetchCreateAnswer,\n\tfetchUpdateQuestion,\n\tfetchUpdateAnswer,\n\tfetchDeleteQuestion,\n\tfetchMoveAnswer,\n\tfetchDeleteAnswer,\n} from '@api';\nimport { addQuestion, updateQuestion, deleteQuestion } from '@models/actions';\nimport {\n\tREQUEST_CREATE_QUESTION,\n\tREQUEST_UPDATE_QUESTION,\n\tREQUEST_DELETE_QUESTION,\n\tREQUEST_MOVE_ANSWER,\n} from '@models/actions/actionTypes';\nimport { showAndHideError } from './error';\n\nfunction* getCreatedQuestion(id, question) {\n\tconst { title, answers, question_type } = question;\n\tconst postedQuestion = {\n\t\ttitle,\n\t\tquestion_type,\n\t\tanswer: answers.length,\n\t};\n\tconst { data } = yield fetchCreateQuestion(id, postedQuestion);\n\treturn data;\n}\n\nfunction* getFetchedAnswers(array, func, id) {\n\treturn yield all(\n\t\tarray.map(function* (it) {\n\t\t\tconst { data } = yield func(id || it.id, it);\n\t\t\treturn data;\n\t\t}),\n\t);\n}\n\nfunction* workerFetchPostQuestionAndAnswers({ payload }) {\n\ttry {\n\t\tconst { testId, data } = payload;\n\n\t\tconst receivedQuestion = yield getCreatedQuestion(testId, data);\n\n\t\tconst receivedAnswers = yield getFetchedAnswers(\n\t\t\tdata.answers,\n\t\t\tfetchCreateAnswer,\n\t\t\treceivedQuestion.id,\n\t\t);\n\n\t\tyield put(\n\t\t\taddQuestion(testId, { ...receivedQuestion, answers: receivedAnswers }),\n\t\t);\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось загрузить данные на сервер', error);\n\t}\n}\n\nfunction* workerFetchPatchQuestionAndAnswers({ payload }) {\n\ttry {\n\t\tconst {\n\t\t\ttestId,\n\t\t\tdata: { updatingQuestion, checkedAnswers, quetionId },\n\t\t} = payload;\n\n\t\tconst { patchAnswers, postAnswers, deleteAnswers } = checkedAnswers;\n\n\t\tconst { data: receivedQuestion } = yield fetchUpdateQuestion(\n\t\t\tquetionId,\n\t\t\tupdatingQuestion,\n\t\t);\n\n\t\tlet updatedAnswers = [],\n\t\t\tcreatedAnswers = [];\n\n\t\tif (patchAnswers.length) {\n\t\t\tupdatedAnswers = yield getFetchedAnswers(patchAnswers, fetchUpdateAnswer);\n\t\t}\n\n\t\tif (postAnswers.length) {\n\t\t\tcreatedAnswers = yield getFetchedAnswers(\n\t\t\t\tpostAnswers,\n\t\t\t\tfetchCreateAnswer,\n\t\t\t\tquetionId,\n\t\t\t);\n\t\t}\n\n\t\tif (deleteAnswers.length) {\n\t\t\tyield getFetchedAnswers(deleteAnswers, fetchDeleteAnswer);\n\t\t}\n\n\t\tyield put(\n\t\t\tupdateQuestion(testId, {\n\t\t\t\t...receivedQuestion,\n\t\t\t\tanswers: updatedAnswers.concat(createdAnswers),\n\t\t\t}),\n\t\t);\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось обновить данные на сервере', error);\n\t}\n}\n\nfunction* workerFetchDeleteQuestion({ payload }) {\n\ttry {\n\t\tconst { testId, questionId } = payload;\n\t\tyield fetchDeleteQuestion(questionId);\n\t\tyield put(deleteQuestion(testId, questionId));\n\t} catch (error) {\n\t\tyield showAndHideError('Не удалось удалить вопрос', error);\n\t}\n}\n\nfunction* workerFetchMoveAnswer({ payload }) {\n\ttry {\n\t\tconst { id, position } = payload;\n\t\tyield fetchMoveAnswer(id, position);\n\t} catch (error) {\n\t\tyield console.warn('Не удалось изменить позицию ответа на сервере', error);\n\t}\n}\n\nexport default function* () {\n\tyield all([\n\t\ttakeEvery(REQUEST_CREATE_QUESTION, workerFetchPostQuestionAndAnswers),\n\t\ttakeEvery(REQUEST_UPDATE_QUESTION, workerFetchPatchQuestionAndAnswers),\n\t\ttakeEvery(REQUEST_DELETE_QUESTION, workerFetchDeleteQuestion),\n\t\ttakeEvery(REQUEST_MOVE_ANSWER, workerFetchMoveAnswer),\n\t]);\n}\n","import { all } from 'redux-saga/effects';\nimport users from './users';\nimport tests from './tests';\nimport questionsAnswers from './questionsAnswers';\n\nexport default function* () {\n\tyield all([users(), tests(), questionsAnswers()]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '@models/reducers';\nimport rootSaga from '@sagas';\nimport { locStorKey } from '@constants';\n\nconst initialState = JSON.parse(localStorage.getItem(locStorKey)) || {\n\tuser: null,\n\terror: '',\n\tmodal: false,\n\tregistration: true,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeEnhancer(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@components/App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { locStorKey } from '@constants';\nimport '@styles/bootstrap.min.css';\nimport '@styles/general.scss';\n\nstore.subscribe(() => {\n\tlocalStorage.setItem(locStorKey, JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}